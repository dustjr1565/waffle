{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Waffle is a framework that lets you use lots of different deep learning tools through just one interface. When it comes to MLOps (machine learning operations), you need to be able to keep up with all the new ideas in deep learning as quickly as possible. But it's hard to do that if you have to write all the code yourself. That's why we started a project to bring together different tools into one framework.</p> <p>Experience the power of multiple deep learning frameworks at your fingertips with Waffle's seamless integration, unlocking limitless possibilities for your machine learning projects.</p>"},{"location":"tutorials/active_filter/","title":"Active Filter","text":"In\u00a0[1]: Copied! <pre>from waffle_hub.hub.adapter.ultralytics import UltralyticsHub\n\nhub = UltralyticsHub.load(\"ultralytics_mnist_detection\")\n</pre> from waffle_hub.hub.adapter.ultralytics import UltralyticsHub  hub = UltralyticsHub.load(\"ultralytics_mnist_detection\") <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/__init__.py:16: UserWarning: \n            torch 1.13.1+cu117 has not been tested.\n            We recommend you to use one of ['1.13.1']\n            \n  warnings.warn(\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/__init__.py:56: UserWarning: \n                ultralytics 8.0.91 has not been tested.\n                We recommend you to use one of ['8.0.87']\n                \n  warnings.warn(\n</pre> In\u00a0[1]: Copied! <pre>from waffle_menu.active_learning import RandomSampling, PL2NSampling\n</pre> from waffle_menu.active_learning import RandomSampling, PL2NSampling <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/__init__.py:16: UserWarning: \n            torch 1.13.1+cu117 has not been tested.\n            We recommend you to use one of ['1.13.1']\n            \n  warnings.warn(\n</pre> In\u00a0[3]: Copied! <pre>RandomSampling(\n    seed=1234\n).sample(\n    image_dir=\"mnist/images\",\n    num_images=5,\n    result_dir=\"random_sampled\",\n    save_images=True\n)\n</pre> RandomSampling(     seed=1234 ).sample(     image_dir=\"mnist/images\",     num_images=5,     result_dir=\"random_sampled\",     save_images=True ) <pre>4it [00:00, 91.17it/s]\n</pre> Out[3]: <pre>&lt;waffle_menu.active_learning.active_learning.ActiveLearningCallback at 0x7fc993964430&gt;</pre> In\u00a0[4]: Copied! <pre>PL2NSampling(\n    hub=hub\n).sample(\n    image_dir=\"mnist/images\",\n    num_images=5,\n    result_dir=\"PL2N_sampled\",\n    save_images=True\n)\n</pre> PL2NSampling(     hub=hub ).sample(     image_dir=\"mnist/images\",     num_images=5,     result_dir=\"PL2N_sampled\",     save_images=True ) <pre>4it [00:00,  7.69it/s]\n</pre> Out[4]: <pre>&lt;waffle_menu.active_learning.active_learning.ActiveLearningCallback at 0x7fc99392e880&gt;</pre> In\u00a0[5]: Copied! <pre>import PIL.Image\nfrom pathlib import Path\n</pre> import PIL.Image from pathlib import Path In\u00a0[6]: Copied! <pre># display n images in a row with PIL\ndef display_images(images):\n    images = [PIL.Image.open(image) for image in images]\n    widths, heights = zip(*(i.size for i in images))\n    total_width = sum(widths)\n    max_height = max(heights)\n    new_im = PIL.Image.new(\"RGB\", (total_width, max_height))\n    x_offset = 0\n    for im in images:\n        new_im.paste(im, (x_offset, 0))\n        x_offset += im.size[0]\n    return new_im\n</pre> # display n images in a row with PIL def display_images(images):     images = [PIL.Image.open(image) for image in images]     widths, heights = zip(*(i.size for i in images))     total_width = sum(widths)     max_height = max(heights)     new_im = PIL.Image.new(\"RGB\", (total_width, max_height))     x_offset = 0     for im in images:         new_im.paste(im, (x_offset, 0))         x_offset += im.size[0]     return new_im In\u00a0[7]: Copied! <pre>display_images(list(Path(\"random_sampled/images\").glob(\"*.png\")))\n</pre> display_images(list(Path(\"random_sampled/images\").glob(\"*.png\"))) Out[7]: In\u00a0[8]: Copied! <pre>display_images(list(Path(\"PL2N_sampled/images\").glob(\"*.png\")))\n</pre> display_images(list(Path(\"PL2N_sampled/images\").glob(\"*.png\"))) Out[8]: In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"tutorials/active_filter/#active-filtering-with-hub","title":"Active Filtering with hub\u00b6","text":""},{"location":"tutorials/prepare_dataset/","title":"Dataset","text":"In\u00a0[1]: Copied! <pre>! wget https://github.com/snuailab/assets/raw/main/waffle/sample_dataset/mnist.zip\n</pre> ! wget https://github.com/snuailab/assets/raw/main/waffle/sample_dataset/mnist.zip <pre>--2023-05-03 11:30:31--  https://github.com/snuailab/assets/raw/main/waffle/sample_dataset/mnist.zip\nResolving github.com (github.com)... 20.200.245.247\nConnecting to github.com (github.com)|20.200.245.247|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://raw.githubusercontent.com/snuailab/assets/main/waffle/sample_dataset/mnist.zip [following]\n--2023-05-03 11:30:31--  https://raw.githubusercontent.com/snuailab/assets/main/waffle/sample_dataset/mnist.zip\nResolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.111.133, 185.199.109.133, 185.199.108.133, ...\nConnecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.111.133|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 157823 (154K) [application/zip]\nSaving to: \u2018mnist.zip\u2019\n\nmnist.zip           100%[===================&gt;] 154.12K  --.-KB/s    in 0.02s   \n\n2023-05-03 11:30:32 (9.02 MB/s) - \u2018mnist.zip\u2019 saved [157823/157823]\n\n</pre> In\u00a0[2]: Copied! <pre>! unzip mnist.zip -d mnist\n</pre> ! unzip mnist.zip -d mnist <pre>Archive:  mnist.zip\n  inflating: mnist/coco.json         \n   creating: mnist/images/\n  inflating: mnist/images/1.png      \n  inflating: mnist/images/10.png     \n  inflating: mnist/images/100.png    \n  inflating: mnist/images/11.png     \n  inflating: mnist/images/12.png     \n  inflating: mnist/images/13.png     \n  inflating: mnist/images/14.png     \n  inflating: mnist/images/15.png     \n  inflating: mnist/images/16.png     \n  inflating: mnist/images/17.png     \n  inflating: mnist/images/18.png     \n  inflating: mnist/images/19.png     \n  inflating: mnist/images/2.png      \n  inflating: mnist/images/20.png     \n  inflating: mnist/images/21.png     \n  inflating: mnist/images/22.png     \n  inflating: mnist/images/23.png     \n  inflating: mnist/images/24.png     \n  inflating: mnist/images/25.png     \n  inflating: mnist/images/26.png     \n  inflating: mnist/images/27.png     \n  inflating: mnist/images/28.png     \n  inflating: mnist/images/29.png     \n  inflating: mnist/images/3.png      \n  inflating: mnist/images/30.png     \n  inflating: mnist/images/31.png     \n  inflating: mnist/images/32.png     \n  inflating: mnist/images/33.png     \n  inflating: mnist/images/34.png     \n  inflating: mnist/images/35.png     \n  inflating: mnist/images/36.png     \n  inflating: mnist/images/37.png     \n  inflating: mnist/images/38.png     \n  inflating: mnist/images/39.png     \n  inflating: mnist/images/4.png      \n  inflating: mnist/images/40.png     \n  inflating: mnist/images/41.png     \n  inflating: mnist/images/42.png     \n  inflating: mnist/images/43.png     \n  inflating: mnist/images/44.png     \n  inflating: mnist/images/45.png     \n  inflating: mnist/images/46.png     \n  inflating: mnist/images/47.png     \n  inflating: mnist/images/48.png     \n  inflating: mnist/images/49.png     \n  inflating: mnist/images/5.png      \n  inflating: mnist/images/50.png     \n  inflating: mnist/images/51.png     \n  inflating: mnist/images/52.png     \n  inflating: mnist/images/53.png     \n  inflating: mnist/images/54.png     \n  inflating: mnist/images/55.png     \n  inflating: mnist/images/56.png     \n  inflating: mnist/images/57.png     \n  inflating: mnist/images/58.png     \n  inflating: mnist/images/59.png     \n  inflating: mnist/images/6.png      \n  inflating: mnist/images/60.png     \n  inflating: mnist/images/61.png     \n  inflating: mnist/images/62.png     \n  inflating: mnist/images/63.png     \n  inflating: mnist/images/64.png     \n  inflating: mnist/images/65.png     \n  inflating: mnist/images/66.png     \n  inflating: mnist/images/67.png     \n  inflating: mnist/images/68.png     \n  inflating: mnist/images/69.png     \n  inflating: mnist/images/7.png      \n  inflating: mnist/images/70.png     \n  inflating: mnist/images/71.png     \n  inflating: mnist/images/72.png     \n  inflating: mnist/images/73.png     \n  inflating: mnist/images/74.png     \n  inflating: mnist/images/75.png     \n  inflating: mnist/images/76.png     \n  inflating: mnist/images/77.png     \n  inflating: mnist/images/78.png     \n  inflating: mnist/images/79.png     \n  inflating: mnist/images/8.png      \n  inflating: mnist/images/80.png     \n  inflating: mnist/images/81.png     \n  inflating: mnist/images/82.png     \n  inflating: mnist/images/83.png     \n  inflating: mnist/images/84.png     \n  inflating: mnist/images/85.png     \n  inflating: mnist/images/86.png     \n  inflating: mnist/images/87.png     \n  inflating: mnist/images/88.png     \n  inflating: mnist/images/89.png     \n  inflating: mnist/images/9.png      \n  inflating: mnist/images/90.png     \n  inflating: mnist/images/91.png     \n  inflating: mnist/images/92.png     \n  inflating: mnist/images/93.png     \n  inflating: mnist/images/94.png     \n  inflating: mnist/images/95.png     \n  inflating: mnist/images/96.png     \n  inflating: mnist/images/97.png     \n  inflating: mnist/images/98.png     \n  inflating: mnist/images/99.png     \n  inflating: mnist/test.json         \n  inflating: mnist/train.json        \n  inflating: mnist/val.json          \n</pre> In\u00a0[4]: Copied! <pre>from waffle_hub.dataset import Dataset\nfrom waffle_hub import TaskType\n\ndataset = Dataset.from_coco(\n    name='mnist_det',\n    task=TaskType.OBJECT_DETECTION,\n    coco_file=\"./mnist/coco.json\",\n    coco_root_dir=\"./mnist/images\",\n)\n</pre> from waffle_hub.dataset import Dataset from waffle_hub import TaskType  dataset = Dataset.from_coco(     name='mnist_det',     task=TaskType.OBJECT_DETECTION,     coco_file=\"./mnist/coco.json\",     coco_root_dir=\"./mnist/images\", ) <pre>loading annotations into memory...\nDone (t=0.00s)\ncreating index...\nindex created!\n</pre> <pre>1it [00:00, 17.83it/s]:   0%|          | 0/100 [00:00&lt;?, ?it/s]\nImporting coco dataset: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:00&lt;00:00, 1643.59it/s]\n</pre> In\u00a0[5]: Copied! <pre>dataset.category_names\n</pre> dataset.category_names Out[5]: <pre>['1', '2']</pre> In\u00a0[6]: Copied! <pre>dataset.split(\n    train_ratio=0.8,\n    val_ratio=0.1,\n    test_ratio=0.1,\n)\nlist(dataset.set_dir.iterdir())\n</pre> dataset.split(     train_ratio=0.8,     val_ratio=0.1,     test_ratio=0.1, ) list(dataset.set_dir.iterdir()) Out[6]: <pre>[PosixPath('datasets/mnist_det/sets/test.json'),\n PosixPath('datasets/mnist_det/sets/val.json'),\n PosixPath('datasets/mnist_det/sets/train.json'),\n PosixPath('datasets/mnist_det/sets/unlabeled.json')]</pre> In\u00a0[7]: Copied! <pre>from waffle_hub import DataType\n\nexport_dir = dataset.export(DataType.YOLO)\nexport_dir\n</pre> from waffle_hub import DataType  export_dir = dataset.export(DataType.YOLO) export_dir Out[7]: <pre>'datasets/mnist_det/exports/YOLO'</pre> In\u00a0[8]: Copied! <pre>export_dir = dataset.export(DataType.HUGGINGFACE)\nexport_dir\n</pre> export_dir = dataset.export(DataType.HUGGINGFACE) export_dir <pre>Downloading and preparing dataset generator/default to /home/lhj/.cache/huggingface/datasets/generator/default-f529974887995952/0.0.0...\n</pre> <pre>                                                              \r</pre> <pre>Dataset generator downloaded and prepared to /home/lhj/.cache/huggingface/datasets/generator/default-f529974887995952/0.0.0. Subsequent calls will reuse this data.\nDownloading and preparing dataset generator/default to /home/lhj/.cache/huggingface/datasets/generator/default-0e082ffb6d530bbe/0.0.0...\n</pre> <pre>                                                        \r</pre> <pre>Dataset generator downloaded and prepared to /home/lhj/.cache/huggingface/datasets/generator/default-0e082ffb6d530bbe/0.0.0. Subsequent calls will reuse this data.\nDownloading and preparing dataset generator/default to /home/lhj/.cache/huggingface/datasets/generator/default-f67a2a27d69a518b/0.0.0...\n</pre> <pre>                                                        \r</pre> <pre>Dataset generator downloaded and prepared to /home/lhj/.cache/huggingface/datasets/generator/default-f67a2a27d69a518b/0.0.0. Subsequent calls will reuse this data.\n</pre> <pre>                                                                                          \r</pre> Out[8]: <pre>'datasets/mnist_det/exports/HUGGINGFACE'</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"tutorials/prepare_dataset/#download-sample-dataset-from-asset","title":"Download Sample dataset from asset\u00b6","text":""},{"location":"tutorials/prepare_dataset/#convert-to-waffle-dataset","title":"Convert to Waffle Dataset\u00b6","text":""},{"location":"tutorials/prepare_dataset/#split-dataset","title":"Split Dataset\u00b6","text":""},{"location":"tutorials/prepare_dataset/#export-dataset-to-other-formats","title":"Export Dataset to other formats\u00b6","text":""},{"location":"tutorials/using_hub/","title":"Using Hub","text":"In\u00a0[1]: Copied! <pre>from waffle_hub.hub.adapter.ultralytics import UltralyticsHub\nfrom waffle_hub import TaskType\n</pre> from waffle_hub.hub.adapter.ultralytics import UltralyticsHub from waffle_hub import TaskType <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n  from .autonotebook import tqdm as notebook_tqdm\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/__init__.py:16: UserWarning: \n            torch 1.13.1+cu117 has not been tested.\n            We recommend you to use one of ['1.13.1']\n            \n  warnings.warn(\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/__init__.py:56: UserWarning: \n                ultralytics 8.0.91 has not been tested.\n                We recommend you to use one of ['8.0.87']\n                \n  warnings.warn(\n</pre> In\u00a0[2]: Copied! <pre>UltralyticsHub.MODEL_TYPES\n</pre> UltralyticsHub.MODEL_TYPES Out[2]: <pre>{'object_detection': {'yolov8': ['n', 's', 'm', 'l', 'x']},\n 'classification': {'yolov8': ['n', 's', 'm', 'l', 'x']},\n 'instance_segmentation': {'yolov8': ['n', 's', 'm', 'l', 'x']}}</pre> In\u00a0[3]: Copied! <pre>ultralytics_hub = UltralyticsHub.new(\n    name=\"ultralytics_mnist_detection\",\n    task=TaskType.OBJECT_DETECTION,\n    model_type=\"yolov8\",\n    model_size=\"n\",\n    categories=[\"1\", \"2\"]\n)\n</pre> ultralytics_hub = UltralyticsHub.new(     name=\"ultralytics_mnist_detection\",     task=TaskType.OBJECT_DETECTION,     model_type=\"yolov8\",     model_size=\"n\",     categories=[\"1\", \"2\"] ) In\u00a0[4]: Copied! <pre>ultralytics_hub.categories\n</pre> ultralytics_hub.categories Out[4]: <pre>[{'supercategory': 'object', 'name': '1'},\n {'supercategory': 'object', 'name': '2'}]</pre> In\u00a0[5]: Copied! <pre>from waffle_hub.hub.adapter.hugging_face import HuggingFaceHub\nfrom waffle_hub import TaskType\n</pre> from waffle_hub.hub.adapter.hugging_face import HuggingFaceHub from waffle_hub import TaskType <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/__init__.py:56: UserWarning: \n                transformers 4.28.1 has not been tested.\n                We recommend you to use one of ['4.27.4']\n                \n  warnings.warn(\n</pre> In\u00a0[6]: Copied! <pre>HuggingFaceHub.MODEL_TYPES\n</pre> HuggingFaceHub.MODEL_TYPES Out[6]: <pre>{'object_detection': {'DETA': {'base': 'jozhang97/deta-resnet-50'},\n  'DETR': {'base': 'facebook/detr-resnet-50',\n   'large': 'facebook/detr-resnet-101'},\n  'YOLOS': {'tiny': 'hustvl/yolos-tiny'}},\n 'classification': {'ViT': {'tiny': 'WinKawaks/vit-tiny-patch16-224',\n   'base': 'google/vit-base-patch16-224'}}}</pre> In\u00a0[7]: Copied! <pre>huggingface_hub = HuggingFaceHub.new(\n    name=\"huggingface_mnist_detection\",\n    task=TaskType.OBJECT_DETECTION,\n    model_type=\"DETR\",\n    model_size=\"base\",\n    categories=[\"1\", \"2\"]\n)\n</pre> huggingface_hub = HuggingFaceHub.new(     name=\"huggingface_mnist_detection\",     task=TaskType.OBJECT_DETECTION,     model_type=\"DETR\",     model_size=\"base\",     categories=[\"1\", \"2\"] ) In\u00a0[8]: Copied! <pre>from waffle_hub.hub.adapter.tx_model import TxModelHub\nfrom waffle_hub import TaskType\n</pre> from waffle_hub.hub.adapter.tx_model import TxModelHub from waffle_hub import TaskType In\u00a0[9]: Copied! <pre>TxModelHub.MODEL_TYPES\n</pre> TxModelHub.MODEL_TYPES Out[9]: <pre>{'object_detection': {'YOLOv5': ['s', 'm', 'l']},\n 'classification': {'Classifier': ['s', 'm', 'l']}}</pre> In\u00a0[10]: Copied! <pre>tx_model_hub = TxModelHub.new(\n    name=\"tx_model_mnist_detection\",\n    task=TaskType.OBJECT_DETECTION,\n    model_type=\"YOLOv5\",\n    model_size=\"s\",\n    categories=[\"1\", \"2\"]\n)\n</pre> tx_model_hub = TxModelHub.new(     name=\"tx_model_mnist_detection\",     task=TaskType.OBJECT_DETECTION,     model_type=\"YOLOv5\",     model_size=\"s\",     categories=[\"1\", \"2\"] ) In\u00a0[11]: Copied! <pre>from waffle_hub.dataset import Dataset\nfrom waffle_hub import DataType\n\ndataset = Dataset.load(\"mnist_det\")\n</pre> from waffle_hub.dataset import Dataset from waffle_hub import DataType  dataset = Dataset.load(\"mnist_det\") In\u00a0[12]: Copied! <pre>dataset_dir = dataset.export(DataType.YOLO)\ntrain_result = ultralytics_hub.train(\n    dataset_dir,\n    image_size=320,\n    epochs=50,\n    batch_size=16\n)\ntrain_result\n</pre> dataset_dir = dataset.export(DataType.YOLO) train_result = ultralytics_hub.train(     dataset_dir,     image_size=320,     epochs=50,     batch_size=16 ) train_result <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/dataset/dataset.py:1051: UserWarning: datasets/mnist_det/exports/YOLO already exists. Removing exist export and override.\n  warnings.warn(f\"{export_dir} already exists. Removing exist export and override.\")\nUltralytics YOLOv8.0.91 \ud83d\ude80 Python-3.9.16 torch-1.13.1+cu117 CUDA:0 (NVIDIA GeForce RTX 4090, 24215MiB)\nyolo/engine/trainer: task=detect, mode=train, model=yolov8n.pt, data=/home/lhj/ws/dev/waffle/datasets/mnist_det/exports/YOLO/data.yaml, epochs=50, patience=50, batch=16, imgsz=320, save=True, save_period=-1, cache=False, device=0, workers=2, project=hubs/ultralytics_mnist_detection, name=artifacts, exist_ok=False, pretrained=False, optimizer=SGD, verbose=True, seed=0, deterministic=True, single_cls=False, rect=True, cos_lr=False, close_mosaic=0, resume=False, amp=True, overlap_mask=True, mask_ratio=4, dropout=0.0, val=True, split=val, save_json=False, save_hybrid=False, conf=None, iou=0.7, max_det=300, half=False, dnn=False, plots=True, source=None, show=False, save_txt=False, save_conf=False, save_crop=False, show_labels=True, show_conf=True, vid_stride=1, line_thickness=3, visualize=False, augment=False, agnostic_nms=False, classes=None, retina_masks=False, boxes=True, format=torchscript, keras=False, optimize=False, int8=False, dynamic=False, simplify=False, opset=None, workspace=4, nms=False, lr0=0.01, lrf=0.01, momentum=0.937, weight_decay=0.0005, warmup_epochs=3.0, warmup_momentum=0.8, warmup_bias_lr=0.1, box=7.5, cls=0.5, dfl=1.5, pose=12.0, kobj=1.0, label_smoothing=0.0, nbs=64, hsv_h=0.015, hsv_s=0.7, hsv_v=0.4, degrees=0.0, translate=0.1, scale=0.5, shear=0.0, perspective=0.0, flipud=0.0, fliplr=0.5, mosaic=1.0, mixup=0.0, copy_paste=0.0, cfg=None, v5loader=False, tracker=botsort.yaml, save_dir=hubs/ultralytics_mnist_detection/artifacts\nOverriding model.yaml nc=80 with nc=2\n\n                   from  n    params  module                                       arguments                     \n  0                  -1  1       464  ultralytics.nn.modules.Conv                  [3, 16, 3, 2]                 \n  1                  -1  1      4672  ultralytics.nn.modules.Conv                  [16, 32, 3, 2]                \n  2                  -1  1      7360  ultralytics.nn.modules.C2f                   [32, 32, 1, True]             \n  3                  -1  1     18560  ultralytics.nn.modules.Conv                  [32, 64, 3, 2]                \n  4                  -1  2     49664  ultralytics.nn.modules.C2f                   [64, 64, 2, True]             \n  5                  -1  1     73984  ultralytics.nn.modules.Conv                  [64, 128, 3, 2]               \n  6                  -1  2    197632  ultralytics.nn.modules.C2f                   [128, 128, 2, True]           \n  7                  -1  1    295424  ultralytics.nn.modules.Conv                  [128, 256, 3, 2]              \n  8                  -1  1    460288  ultralytics.nn.modules.C2f                   [256, 256, 1, True]           \n  9                  -1  1    164608  ultralytics.nn.modules.SPPF                  [256, 256, 5]                 \n 10                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 11             [-1, 6]  1         0  ultralytics.nn.modules.Concat                [1]                           \n 12                  -1  1    148224  ultralytics.nn.modules.C2f                   [384, 128, 1]                 \n 13                  -1  1         0  torch.nn.modules.upsampling.Upsample         [None, 2, 'nearest']          \n 14             [-1, 4]  1         0  ultralytics.nn.modules.Concat                [1]                           \n 15                  -1  1     37248  ultralytics.nn.modules.C2f                   [192, 64, 1]                  \n 16                  -1  1     36992  ultralytics.nn.modules.Conv                  [64, 64, 3, 2]                \n 17            [-1, 12]  1         0  ultralytics.nn.modules.Concat                [1]                           \n 18                  -1  1    123648  ultralytics.nn.modules.C2f                   [192, 128, 1]                 \n 19                  -1  1    147712  ultralytics.nn.modules.Conv                  [128, 128, 3, 2]              \n 20             [-1, 9]  1         0  ultralytics.nn.modules.Concat                [1]                           \n 21                  -1  1    493056  ultralytics.nn.modules.C2f                   [384, 256, 1]                 \n 22        [15, 18, 21]  1    751702  ultralytics.nn.modules.Detect                [2, [64, 128, 256]]           \nModel summary: 225 layers, 3011238 parameters, 3011222 gradients, 8.2 GFLOPs\n\nTransferred 319/355 items from pretrained weights\nTensorBoard: Start with 'tensorboard --logdir hubs/ultralytics_mnist_detection/artifacts', view at http://localhost:6006/\nAMP: running Automatic Mixed Precision (AMP) checks with YOLOv8n...\nAMP: checks passed \u2705\noptimizer: SGD(lr=0.01) with parameter groups 57 weight(decay=0.0), 64 weight(decay=0.0005), 63 bias\ntrain: Scanning /home/lhj/ws/dev/waffle/datasets/mnist_det/exports/YOLO/train/labels... 80 images, 0 backgrounds, 0 corrupt: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 80/80 [00:00&lt;00:00, 7271.84it/s]\ntrain: New cache created: /home/lhj/ws/dev/waffle/datasets/mnist_det/exports/YOLO/train/labels.cache\nalbumentations: Blur(p=0.01, blur_limit=(3, 7)), MedianBlur(p=0.01, blur_limit=(3, 7)), ToGray(p=0.01), CLAHE(p=0.01, clip_limit=(1, 4.0), tile_grid_size=(8, 8))\nWARNING \u26a0\ufe0f 'rect=True' is incompatible with DataLoader shuffle, setting shuffle=False\nval: Scanning /home/lhj/ws/dev/waffle/datasets/mnist_det/exports/YOLO/val/labels... 10 images, 0 backgrounds, 0 corrupt: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:00&lt;00:00, 4388.27it/s]\nval: New cache created: /home/lhj/ws/dev/waffle/datasets/mnist_det/exports/YOLO/val/labels.cache\nPlotting labels to hubs/ultralytics_mnist_detection/artifacts/labels.jpg... \nImage sizes 320 train, 320 val\nUsing 2 dataloader workers\nLogging results to hubs/ultralytics_mnist_detection/artifacts\nStarting training for 50 epochs...\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       1/50     0.753G      1.519      4.172      1.084         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  6.10it/s]\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/torch/optim/lr_scheduler.py:138: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate\n  warnings.warn(\"Detected call of `lr_scheduler.step()` before `optimizer.step()`. \"\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.13it/s]\n                   all         10         10    0.00223      0.667     0.0155     0.0136\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       2/50     0.753G      1.476      4.018      1.078         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.10it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 17.14it/s]\n                   all         10         10    0.00222      0.667    0.00832    0.00719\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       3/50     0.763G      1.396      4.009     0.9768         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  7.97it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.72it/s]\n                   all         10         10    0.00336          1     0.0106    0.00718\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       4/50     0.763G     0.8721        3.6     0.8468         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.09it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.85it/s]\n                   all         10         10    0.00322          1     0.0142     0.0107\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       5/50     0.763G     0.9442      3.325     0.8637         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.11it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.60it/s]\n                   all         10         10    0.00326          1     0.0163     0.0141\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       6/50     0.763G      0.936      2.551     0.8485         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.16it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.64it/s]\n                   all         10         10    0.00328          1     0.0178     0.0142\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       7/50     0.763G      0.889      1.762     0.8642         14        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.05it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 17.10it/s]\n                   all         10         10     0.0032          1      0.648      0.414\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       8/50     0.763G     0.8886      1.507      0.845         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.19it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.71it/s]\n                   all         10         10    0.00321          1      0.913      0.741\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n       9/50     0.763G      0.871      1.303     0.8618         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.08it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.85it/s]\n                   all         10         10     0.0033          1      0.773      0.601\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      10/50     0.763G     0.9455      1.354      0.871         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.18it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.53it/s]\n                   all         10         10    0.00334          1      0.694      0.576\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      11/50     0.763G      1.039      1.313     0.8635         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.17it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.64it/s]\n                   all         10         10    0.00345          1      0.776      0.623\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      12/50     0.763G     0.8931      1.276     0.8205         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.20it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.56it/s]\n                   all         10         10          1      0.802      0.832      0.718\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      13/50     0.763G     0.8568      1.178     0.8642         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.28it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.62it/s]\n                   all         10         10      0.513          1      0.954      0.693\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      14/50     0.763G     0.8742      1.237      0.887         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.17it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.64it/s]\n                   all         10         10          1      0.293      0.954      0.701\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      15/50     0.763G     0.8342      1.136     0.8575         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.21it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 17.07it/s]\n                   all         10         10          1      0.546      0.995      0.801\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      16/50     0.763G     0.9621      1.196     0.8739         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.30it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.53it/s]\n                   all         10         10          1      0.666      0.986      0.716\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      17/50     0.763G     0.8349      1.109     0.8844         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.20it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.51it/s]\n                   all         10         10      0.928      0.867      0.969      0.788\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      18/50     0.763G      0.967      1.124     0.9157         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.29it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.46it/s]\n                   all         10         10      0.909      0.806      0.969      0.707\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      19/50     0.763G     0.8473      1.067      0.863         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.24it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.80it/s]\n                   all         10         10      0.883      0.966      0.928      0.692\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      20/50     0.763G     0.8386      1.142     0.8945         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.19it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.95it/s]\n                   all         10         10      0.883      0.865      0.969      0.692\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      21/50     0.763G     0.8669      1.169     0.8872         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.33it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.58it/s]\n                   all         10         10      0.855      0.928      0.933      0.721\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      22/50     0.763G     0.8188      1.005     0.8531         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.23it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.70it/s]\n                   all         10         10      0.836      0.929      0.964      0.693\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      23/50     0.763G     0.8281      1.012     0.9058         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.20it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.53it/s]\n                   all         10         10      0.894      0.977      0.995       0.78\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      24/50     0.763G     0.9062      1.126     0.8909         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.10it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.76it/s]\n                   all         10         10      0.982      0.974      0.995      0.808\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      25/50     0.763G     0.9139      1.056     0.9175         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.25it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.45it/s]\n                   all         10         10      0.987      0.962      0.995      0.817\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      26/50     0.763G     0.8345      1.045     0.8673         14        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.24it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.83it/s]\n                   all         10         10      0.991      0.939      0.995      0.747\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      27/50     0.763G     0.8254       1.02     0.8732         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.30it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.82it/s]\n                   all         10         10      0.958      0.942      0.995      0.758\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      28/50     0.763G     0.8005      1.049     0.8583         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.21it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.61it/s]\n                   all         10         10      0.989      0.955      0.995      0.792\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      29/50     0.763G      0.788     0.9747      0.877         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.26it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.64it/s]\n                   all         10         10      0.986      0.943      0.995       0.69\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      30/50     0.763G     0.8396     0.9897     0.8673         14        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.28it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.55it/s]\n                   all         10         10      0.928       0.93      0.995      0.731\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      31/50     0.763G     0.7954     0.9294     0.8656         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.27it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.69it/s]\n                   all         10         10      0.958      0.938      0.995      0.784\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      32/50     0.763G     0.7702     0.9496     0.8848         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.21it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.75it/s]\n                   all         10         10       0.99      0.956      0.995      0.751\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      33/50     0.763G     0.7906     0.9543     0.8876         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.29it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.53it/s]\n                   all         10         10      0.932      0.963      0.995      0.791\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      34/50     0.763G     0.7382     0.8322     0.8608         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.18it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 17.10it/s]\n                   all         10         10      0.912      0.935      0.995      0.726\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      35/50     0.763G     0.7578     0.8534     0.9092         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.29it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.63it/s]\n                   all         10         10      0.941      0.937      0.995      0.805\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      36/50     0.763G      0.759     0.8622     0.8602         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.18it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.60it/s]\n                   all         10         10      0.942      0.992      0.995      0.846\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      37/50     0.763G     0.6325     0.8019     0.8405         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.25it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.77it/s]\n                   all         10         10      0.958      0.993      0.995      0.788\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      38/50     0.763G     0.6673     0.7835     0.8354         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.30it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.94it/s]\n                   all         10         10      0.976      0.999      0.995      0.784\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      39/50     0.763G     0.6236     0.7799     0.8382         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.27it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 17.09it/s]\n                   all         10         10       0.96          1      0.995      0.848\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      40/50     0.763G     0.6615     0.7937     0.8429         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.19it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.70it/s]\n                   all         10         10      0.972          1      0.995      0.803\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      41/50     0.763G     0.6449     0.7812      0.825         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.29it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.55it/s]\n                   all         10         10       0.98          1      0.995      0.854\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      42/50     0.763G     0.6408     0.7675     0.8539         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.34it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.55it/s]\n                   all         10         10      0.972          1      0.995      0.807\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      43/50     0.763G     0.6768     0.7666      0.866         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.32it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.62it/s]\n                   all         10         10      0.974          1      0.995      0.808\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      44/50     0.763G     0.6294       0.77     0.8196         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.21it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.54it/s]\n                   all         10         10      0.973          1      0.995      0.847\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      45/50     0.763G     0.6039     0.7107     0.8275         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.30it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.78it/s]\n                   all         10         10      0.981          1      0.995      0.853\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      46/50     0.763G     0.5384     0.7288     0.7955         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.30it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.52it/s]\n                   all         10         10      0.984          1      0.995      0.871\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      47/50     0.763G     0.5997     0.7299     0.8243         16        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.35it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.55it/s]\n                   all         10         10      0.984          1      0.995      0.823\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      48/50     0.763G      0.575     0.6942     0.8157         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.16it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.81it/s]\n                   all         10         10      0.982          1      0.995      0.836\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      49/50     0.763G     0.6355     0.7362     0.8701         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.32it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 16.45it/s]\n                   all         10         10      0.979          1      0.995      0.875\n\n      Epoch    GPU_mem   box_loss   cls_loss   dfl_loss  Instances       Size\n      50/50     0.763G     0.5519     0.6776     0.8147         15        320: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 5/5 [00:00&lt;00:00,  8.29it/s]\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 15.57it/s]\n                   all         10         10      0.978          1      0.995      0.875\n\n50 epochs completed in 0.011 hours.\nOptimizer stripped from hubs/ultralytics_mnist_detection/artifacts/weights/last.pt, 6.2MB\nOptimizer stripped from hubs/ultralytics_mnist_detection/artifacts/weights/best.pt, 6.2MB\n\nValidating hubs/ultralytics_mnist_detection/artifacts/weights/best.pt...\nUltralytics YOLOv8.0.91 \ud83d\ude80 Python-3.9.16 torch-1.13.1+cu117 CUDA:0 (NVIDIA GeForce RTX 4090, 24215MiB)\nModel summary (fused): 168 layers, 3006038 parameters, 0 gradients, 8.1 GFLOPs\n                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00&lt;00:00, 17.08it/s]\n                   all         10         10      0.978          1      0.995      0.875\n                     1         10          3      0.959          1      0.995      0.818\n                     2         10          7      0.997          1      0.995      0.931\nSpeed: 0.0ms preprocess, 4.2ms inference, 0.0ms loss, 0.3ms postprocess per image\nResults saved to hubs/ultralytics_mnist_detection/artifacts\n</pre> Out[12]: <pre>TrainResult(best_ckpt_file=PosixPath('hubs/ultralytics_mnist_detection/weights/best_ckpt.pt'), last_ckpt_file=PosixPath('hubs/ultralytics_mnist_detection/weights/last_ckpt.pt'), metrics=[[{'tag': 'epoch', 'value': 0.0}, {'tag': 'train/box_loss', 'value': 1.519}, {'tag': 'train/cls_loss', 'value': 4.1718}, {'tag': 'train/dfl_loss', 'value': 1.0838}, {'tag': 'metrics/precision(B)', 'value': 0.00223}, {'tag': 'metrics/recall(B)', 'value': 0.66667}, {'tag': 'metrics/mAP50(B)', 'value': 0.01552}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.01359}, {'tag': 'val/box_loss', 'value': 0.51572}, {'tag': 'val/cls_loss', 'value': 3.5799}, {'tag': 'val/dfl_loss', 'value': 0.84739}, {'tag': 'lr/pg0', 'value': 0.0964}, {'tag': 'lr/pg1', 'value': 0.0004}, {'tag': 'lr/pg2', 'value': 0.0004}], [{'tag': 'epoch', 'value': 1.0}, {'tag': 'train/box_loss', 'value': 1.4765}, {'tag': 'train/cls_loss', 'value': 4.0175}, {'tag': 'train/dfl_loss', 'value': 1.0779}, {'tag': 'metrics/precision(B)', 'value': 0.00222}, {'tag': 'metrics/recall(B)', 'value': 0.66667}, {'tag': 'metrics/mAP50(B)', 'value': 0.00832}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.00719}, {'tag': 'val/box_loss', 'value': 0.52364}, {'tag': 'val/cls_loss', 'value': 3.5808}, {'tag': 'val/dfl_loss', 'value': 0.84447}, {'tag': 'lr/pg0', 'value': 0.091882}, {'tag': 'lr/pg1', 'value': 0.00088218}, {'tag': 'lr/pg2', 'value': 0.00088218}], [{'tag': 'epoch', 'value': 2.0}, {'tag': 'train/box_loss', 'value': 1.3957}, {'tag': 'train/cls_loss', 'value': 4.0094}, {'tag': 'train/dfl_loss', 'value': 0.97685}, {'tag': 'metrics/precision(B)', 'value': 0.00336}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.01058}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.00718}, {'tag': 'val/box_loss', 'value': 0.75254}, {'tag': 'val/cls_loss', 'value': 3.6011}, {'tag': 'val/dfl_loss', 'value': 0.86191}, {'tag': 'lr/pg0', 'value': 0.087345}, {'tag': 'lr/pg1', 'value': 0.0013446}, {'tag': 'lr/pg2', 'value': 0.0013446}], [{'tag': 'epoch', 'value': 3.0}, {'tag': 'train/box_loss', 'value': 0.87209}, {'tag': 'train/cls_loss', 'value': 3.5997}, {'tag': 'train/dfl_loss', 'value': 0.84676}, {'tag': 'metrics/precision(B)', 'value': 0.00322}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.01419}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.0107}, {'tag': 'val/box_loss', 'value': 0.64324}, {'tag': 'val/cls_loss', 'value': 3.5617}, {'tag': 'val/dfl_loss', 'value': 0.83003}, {'tag': 'lr/pg0', 'value': 0.082787}, {'tag': 'lr/pg1', 'value': 0.0017871}, {'tag': 'lr/pg2', 'value': 0.0017871}], [{'tag': 'epoch', 'value': 4.0}, {'tag': 'train/box_loss', 'value': 0.94421}, {'tag': 'train/cls_loss', 'value': 3.3245}, {'tag': 'train/dfl_loss', 'value': 0.86368}, {'tag': 'metrics/precision(B)', 'value': 0.00326}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.01631}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.01412}, {'tag': 'val/box_loss', 'value': 0.56326}, {'tag': 'val/cls_loss', 'value': 3.4686}, {'tag': 'val/dfl_loss', 'value': 0.82539}, {'tag': 'lr/pg0', 'value': 0.07821}, {'tag': 'lr/pg1', 'value': 0.0022099}, {'tag': 'lr/pg2', 'value': 0.0022099}], [{'tag': 'epoch', 'value': 5.0}, {'tag': 'train/box_loss', 'value': 0.93604}, {'tag': 'train/cls_loss', 'value': 2.5513}, {'tag': 'train/dfl_loss', 'value': 0.8485}, {'tag': 'metrics/precision(B)', 'value': 0.00328}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.01783}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.01419}, {'tag': 'val/box_loss', 'value': 0.61543}, {'tag': 'val/cls_loss', 'value': 3.3851}, {'tag': 'val/dfl_loss', 'value': 0.86136}, {'tag': 'lr/pg0', 'value': 0.073613}, {'tag': 'lr/pg1', 'value': 0.0026129}, {'tag': 'lr/pg2', 'value': 0.0026129}], [{'tag': 'epoch', 'value': 6.0}, {'tag': 'train/box_loss', 'value': 0.88897}, {'tag': 'train/cls_loss', 'value': 1.7619}, {'tag': 'train/dfl_loss', 'value': 0.86424}, {'tag': 'metrics/precision(B)', 'value': 0.0032}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.64792}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.41407}, {'tag': 'val/box_loss', 'value': 0.89601}, {'tag': 'val/cls_loss', 'value': 3.1701}, {'tag': 'val/dfl_loss', 'value': 0.88008}, {'tag': 'lr/pg0', 'value': 0.068996}, {'tag': 'lr/pg1', 'value': 0.0029961}, {'tag': 'lr/pg2', 'value': 0.0029961}], [{'tag': 'epoch', 'value': 7.0}, {'tag': 'train/box_loss', 'value': 0.88865}, {'tag': 'train/cls_loss', 'value': 1.5067}, {'tag': 'train/dfl_loss', 'value': 0.845}, {'tag': 'metrics/precision(B)', 'value': 0.00321}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.9125}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.74081}, {'tag': 'val/box_loss', 'value': 0.70099}, {'tag': 'val/cls_loss', 'value': 3.0}, {'tag': 'val/dfl_loss', 'value': 0.85533}, {'tag': 'lr/pg0', 'value': 0.064359}, {'tag': 'lr/pg1', 'value': 0.0033595}, {'tag': 'lr/pg2', 'value': 0.0033595}], [{'tag': 'epoch', 'value': 8.0}, {'tag': 'train/box_loss', 'value': 0.87099}, {'tag': 'train/cls_loss', 'value': 1.3034}, {'tag': 'train/dfl_loss', 'value': 0.86183}, {'tag': 'metrics/precision(B)', 'value': 0.0033}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.77275}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.60136}, {'tag': 'val/box_loss', 'value': 0.65106}, {'tag': 'val/cls_loss', 'value': 2.9709}, {'tag': 'val/dfl_loss', 'value': 0.83177}, {'tag': 'lr/pg0', 'value': 0.059703}, {'tag': 'lr/pg1', 'value': 0.003703}, {'tag': 'lr/pg2', 'value': 0.003703}], [{'tag': 'epoch', 'value': 9.0}, {'tag': 'train/box_loss', 'value': 0.94549}, {'tag': 'train/cls_loss', 'value': 1.3541}, {'tag': 'train/dfl_loss', 'value': 0.87097}, {'tag': 'metrics/precision(B)', 'value': 0.00334}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.69384}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.57554}, {'tag': 'val/box_loss', 'value': 0.69623}, {'tag': 'val/cls_loss', 'value': 2.9123}, {'tag': 'val/dfl_loss', 'value': 0.83548}, {'tag': 'lr/pg0', 'value': 0.055027}, {'tag': 'lr/pg1', 'value': 0.0040268}, {'tag': 'lr/pg2', 'value': 0.0040268}], [{'tag': 'epoch', 'value': 10.0}, {'tag': 'train/box_loss', 'value': 1.0392}, {'tag': 'train/cls_loss', 'value': 1.3133}, {'tag': 'train/dfl_loss', 'value': 0.86351}, {'tag': 'metrics/precision(B)', 'value': 0.00345}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.77639}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.62306}, {'tag': 'val/box_loss', 'value': 0.75423}, {'tag': 'val/cls_loss', 'value': 2.8756}, {'tag': 'val/dfl_loss', 'value': 0.84436}, {'tag': 'lr/pg0', 'value': 0.050331}, {'tag': 'lr/pg1', 'value': 0.0043308}, {'tag': 'lr/pg2', 'value': 0.0043308}], [{'tag': 'epoch', 'value': 11.0}, {'tag': 'train/box_loss', 'value': 0.89313}, {'tag': 'train/cls_loss', 'value': 1.2763}, {'tag': 'train/dfl_loss', 'value': 0.82048}, {'tag': 'metrics/precision(B)', 'value': 1.0}, {'tag': 'metrics/recall(B)', 'value': 0.80202}, {'tag': 'metrics/mAP50(B)', 'value': 0.83166}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.71815}, {'tag': 'val/box_loss', 'value': 0.68126}, {'tag': 'val/cls_loss', 'value': 2.7194}, {'tag': 'val/dfl_loss', 'value': 0.86865}, {'tag': 'lr/pg0', 'value': 0.045615}, {'tag': 'lr/pg1', 'value': 0.004615}, {'tag': 'lr/pg2', 'value': 0.004615}], [{'tag': 'epoch', 'value': 12.0}, {'tag': 'train/box_loss', 'value': 0.85681}, {'tag': 'train/cls_loss', 'value': 1.1778}, {'tag': 'train/dfl_loss', 'value': 0.86423}, {'tag': 'metrics/precision(B)', 'value': 0.51344}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.95375}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.6928}, {'tag': 'val/box_loss', 'value': 0.84716}, {'tag': 'val/cls_loss', 'value': 2.6835}, {'tag': 'val/dfl_loss', 'value': 0.8792}, {'tag': 'lr/pg0', 'value': 0.040879}, {'tag': 'lr/pg1', 'value': 0.0048794}, {'tag': 'lr/pg2', 'value': 0.0048794}], [{'tag': 'epoch', 'value': 13.0}, {'tag': 'train/box_loss', 'value': 0.87422}, {'tag': 'train/cls_loss', 'value': 1.237}, {'tag': 'train/dfl_loss', 'value': 0.88696}, {'tag': 'metrics/precision(B)', 'value': 1.0}, {'tag': 'metrics/recall(B)', 'value': 0.29329}, {'tag': 'metrics/mAP50(B)', 'value': 0.95375}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.70051}, {'tag': 'val/box_loss', 'value': 0.6889}, {'tag': 'val/cls_loss', 'value': 2.4908}, {'tag': 'val/dfl_loss', 'value': 0.85909}, {'tag': 'lr/pg0', 'value': 0.036124}, {'tag': 'lr/pg1', 'value': 0.0051239}, {'tag': 'lr/pg2', 'value': 0.0051239}], [{'tag': 'epoch', 'value': 14.0}, {'tag': 'train/box_loss', 'value': 0.8342}, {'tag': 'train/cls_loss', 'value': 1.1362}, {'tag': 'train/dfl_loss', 'value': 0.85749}, {'tag': 'metrics/precision(B)', 'value': 1.0}, {'tag': 'metrics/recall(B)', 'value': 0.5464}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.80125}, {'tag': 'val/box_loss', 'value': 0.71015}, {'tag': 'val/cls_loss', 'value': 2.2767}, {'tag': 'val/dfl_loss', 'value': 0.85513}, {'tag': 'lr/pg0', 'value': 0.031349}, {'tag': 'lr/pg1', 'value': 0.0053487}, {'tag': 'lr/pg2', 'value': 0.0053487}], [{'tag': 'epoch', 'value': 15.0}, {'tag': 'train/box_loss', 'value': 0.96213}, {'tag': 'train/cls_loss', 'value': 1.1956}, {'tag': 'train/dfl_loss', 'value': 0.87388}, {'tag': 'metrics/precision(B)', 'value': 1.0}, {'tag': 'metrics/recall(B)', 'value': 0.66616}, {'tag': 'metrics/mAP50(B)', 'value': 0.98625}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.7155}, {'tag': 'val/box_loss', 'value': 0.93155}, {'tag': 'val/cls_loss', 'value': 2.3853}, {'tag': 'val/dfl_loss', 'value': 0.90568}, {'tag': 'lr/pg0', 'value': 0.026554}, {'tag': 'lr/pg1', 'value': 0.0055537}, {'tag': 'lr/pg2', 'value': 0.0055537}], [{'tag': 'epoch', 'value': 16.0}, {'tag': 'train/box_loss', 'value': 0.83486}, {'tag': 'train/cls_loss', 'value': 1.1093}, {'tag': 'train/dfl_loss', 'value': 0.88436}, {'tag': 'metrics/precision(B)', 'value': 0.92844}, {'tag': 'metrics/recall(B)', 'value': 0.86735}, {'tag': 'metrics/mAP50(B)', 'value': 0.96875}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.7882}, {'tag': 'val/box_loss', 'value': 0.6427}, {'tag': 'val/cls_loss', 'value': 1.8091}, {'tag': 'val/dfl_loss', 'value': 0.86447}, {'tag': 'lr/pg0', 'value': 0.021739}, {'tag': 'lr/pg1', 'value': 0.0057389}, {'tag': 'lr/pg2', 'value': 0.0057389}], [{'tag': 'epoch', 'value': 17.0}, {'tag': 'train/box_loss', 'value': 0.967}, {'tag': 'train/cls_loss', 'value': 1.1242}, {'tag': 'train/dfl_loss', 'value': 0.91573}, {'tag': 'metrics/precision(B)', 'value': 0.9094}, {'tag': 'metrics/recall(B)', 'value': 0.80574}, {'tag': 'metrics/mAP50(B)', 'value': 0.96875}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.70745}, {'tag': 'val/box_loss', 'value': 1.0184}, {'tag': 'val/cls_loss', 'value': 1.9264}, {'tag': 'val/dfl_loss', 'value': 0.92668}, {'tag': 'lr/pg0', 'value': 0.016904}, {'tag': 'lr/pg1', 'value': 0.0059043}, {'tag': 'lr/pg2', 'value': 0.0059043}], [{'tag': 'epoch', 'value': 18.0}, {'tag': 'train/box_loss', 'value': 0.84728}, {'tag': 'train/cls_loss', 'value': 1.0674}, {'tag': 'train/dfl_loss', 'value': 0.86298}, {'tag': 'metrics/precision(B)', 'value': 0.88333}, {'tag': 'metrics/recall(B)', 'value': 0.96581}, {'tag': 'metrics/mAP50(B)', 'value': 0.92806}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.69195}, {'tag': 'val/box_loss', 'value': 0.68638}, {'tag': 'val/cls_loss', 'value': 1.6875}, {'tag': 'val/dfl_loss', 'value': 0.87308}, {'tag': 'lr/pg0', 'value': 0.01205}, {'tag': 'lr/pg1', 'value': 0.0060498}, {'tag': 'lr/pg2', 'value': 0.0060498}], [{'tag': 'epoch', 'value': 19.0}, {'tag': 'train/box_loss', 'value': 0.83862}, {'tag': 'train/cls_loss', 'value': 1.1421}, {'tag': 'train/dfl_loss', 'value': 0.89447}, {'tag': 'metrics/precision(B)', 'value': 0.88341}, {'tag': 'metrics/recall(B)', 'value': 0.86533}, {'tag': 'metrics/mAP50(B)', 'value': 0.96944}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.69207}, {'tag': 'val/box_loss', 'value': 0.82575}, {'tag': 'val/cls_loss', 'value': 1.8148}, {'tag': 'val/dfl_loss', 'value': 0.88501}, {'tag': 'lr/pg0', 'value': 0.0071756}, {'tag': 'lr/pg1', 'value': 0.0061756}, {'tag': 'lr/pg2', 'value': 0.0061756}], [{'tag': 'epoch', 'value': 20.0}, {'tag': 'train/box_loss', 'value': 0.86689}, {'tag': 'train/cls_loss', 'value': 1.1688}, {'tag': 'train/dfl_loss', 'value': 0.88715}, {'tag': 'metrics/precision(B)', 'value': 0.85509}, {'tag': 'metrics/recall(B)', 'value': 0.92772}, {'tag': 'metrics/mAP50(B)', 'value': 0.93329}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.72058}, {'tag': 'val/box_loss', 'value': 0.72265}, {'tag': 'val/cls_loss', 'value': 1.562}, {'tag': 'val/dfl_loss', 'value': 0.86782}, {'tag': 'lr/pg0', 'value': 0.00604}, {'tag': 'lr/pg1', 'value': 0.00604}, {'tag': 'lr/pg2', 'value': 0.00604}], [{'tag': 'epoch', 'value': 21.0}, {'tag': 'train/box_loss', 'value': 0.8188}, {'tag': 'train/cls_loss', 'value': 1.0053}, {'tag': 'train/dfl_loss', 'value': 0.85312}, {'tag': 'metrics/precision(B)', 'value': 0.83555}, {'tag': 'metrics/recall(B)', 'value': 0.92857}, {'tag': 'metrics/mAP50(B)', 'value': 0.964}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.69332}, {'tag': 'val/box_loss', 'value': 0.94858}, {'tag': 'val/cls_loss', 'value': 1.3143}, {'tag': 'val/dfl_loss', 'value': 0.90372}, {'tag': 'lr/pg0', 'value': 0.00604}, {'tag': 'lr/pg1', 'value': 0.00604}, {'tag': 'lr/pg2', 'value': 0.00604}], [{'tag': 'epoch', 'value': 22.0}, {'tag': 'train/box_loss', 'value': 0.82806}, {'tag': 'train/cls_loss', 'value': 1.0123}, {'tag': 'train/dfl_loss', 'value': 0.90576}, {'tag': 'metrics/precision(B)', 'value': 0.89396}, {'tag': 'metrics/recall(B)', 'value': 0.97703}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.77982}, {'tag': 'val/box_loss', 'value': 0.7139}, {'tag': 'val/cls_loss', 'value': 1.3257}, {'tag': 'val/dfl_loss', 'value': 0.86058}, {'tag': 'lr/pg0', 'value': 0.005842}, {'tag': 'lr/pg1', 'value': 0.005842}, {'tag': 'lr/pg2', 'value': 0.005842}], [{'tag': 'epoch', 'value': 23.0}, {'tag': 'train/box_loss', 'value': 0.90624}, {'tag': 'train/cls_loss', 'value': 1.1257}, {'tag': 'train/dfl_loss', 'value': 0.89095}, {'tag': 'metrics/precision(B)', 'value': 0.98229}, {'tag': 'metrics/recall(B)', 'value': 0.97356}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.80762}, {'tag': 'val/box_loss', 'value': 0.68138}, {'tag': 'val/cls_loss', 'value': 1.1816}, {'tag': 'val/dfl_loss', 'value': 0.867}, {'tag': 'lr/pg0', 'value': 0.005644}, {'tag': 'lr/pg1', 'value': 0.005644}, {'tag': 'lr/pg2', 'value': 0.005644}], [{'tag': 'epoch', 'value': 24.0}, {'tag': 'train/box_loss', 'value': 0.91392}, {'tag': 'train/cls_loss', 'value': 1.0561}, {'tag': 'train/dfl_loss', 'value': 0.91751}, {'tag': 'metrics/precision(B)', 'value': 0.98686}, {'tag': 'metrics/recall(B)', 'value': 0.96225}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.81739}, {'tag': 'val/box_loss', 'value': 0.7181}, {'tag': 'val/cls_loss', 'value': 1.1319}, {'tag': 'val/dfl_loss', 'value': 0.86043}, {'tag': 'lr/pg0', 'value': 0.005446}, {'tag': 'lr/pg1', 'value': 0.005446}, {'tag': 'lr/pg2', 'value': 0.005446}], [{'tag': 'epoch', 'value': 25.0}, {'tag': 'train/box_loss', 'value': 0.83446}, {'tag': 'train/cls_loss', 'value': 1.0451}, {'tag': 'train/dfl_loss', 'value': 0.86725}, {'tag': 'metrics/precision(B)', 'value': 0.99076}, {'tag': 'metrics/recall(B)', 'value': 0.93873}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.74738}, {'tag': 'val/box_loss', 'value': 0.83562}, {'tag': 'val/cls_loss', 'value': 1.0517}, {'tag': 'val/dfl_loss', 'value': 0.88785}, {'tag': 'lr/pg0', 'value': 0.005248}, {'tag': 'lr/pg1', 'value': 0.005248}, {'tag': 'lr/pg2', 'value': 0.005248}], [{'tag': 'epoch', 'value': 26.0}, {'tag': 'train/box_loss', 'value': 0.82539}, {'tag': 'train/cls_loss', 'value': 1.0201}, {'tag': 'train/dfl_loss', 'value': 0.87316}, {'tag': 'metrics/precision(B)', 'value': 0.95777}, {'tag': 'metrics/recall(B)', 'value': 0.94152}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.75846}, {'tag': 'val/box_loss', 'value': 0.78866}, {'tag': 'val/cls_loss', 'value': 1.0904}, {'tag': 'val/dfl_loss', 'value': 0.86864}, {'tag': 'lr/pg0', 'value': 0.00505}, {'tag': 'lr/pg1', 'value': 0.00505}, {'tag': 'lr/pg2', 'value': 0.00505}], [{'tag': 'epoch', 'value': 27.0}, {'tag': 'train/box_loss', 'value': 0.80047}, {'tag': 'train/cls_loss', 'value': 1.0493}, {'tag': 'train/dfl_loss', 'value': 0.85825}, {'tag': 'metrics/precision(B)', 'value': 0.9893}, {'tag': 'metrics/recall(B)', 'value': 0.95511}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.79234}, {'tag': 'val/box_loss', 'value': 0.71617}, {'tag': 'val/cls_loss', 'value': 0.97685}, {'tag': 'val/dfl_loss', 'value': 0.86295}, {'tag': 'lr/pg0', 'value': 0.004852}, {'tag': 'lr/pg1', 'value': 0.004852}, {'tag': 'lr/pg2', 'value': 0.004852}], [{'tag': 'epoch', 'value': 28.0}, {'tag': 'train/box_loss', 'value': 0.78805}, {'tag': 'train/cls_loss', 'value': 0.97475}, {'tag': 'train/dfl_loss', 'value': 0.87696}, {'tag': 'metrics/precision(B)', 'value': 0.98602}, {'tag': 'metrics/recall(B)', 'value': 0.94348}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.68985}, {'tag': 'val/box_loss', 'value': 0.87493}, {'tag': 'val/cls_loss', 'value': 1.0162}, {'tag': 'val/dfl_loss', 'value': 0.88275}, {'tag': 'lr/pg0', 'value': 0.004654}, {'tag': 'lr/pg1', 'value': 0.004654}, {'tag': 'lr/pg2', 'value': 0.004654}], [{'tag': 'epoch', 'value': 29.0}, {'tag': 'train/box_loss', 'value': 0.83955}, {'tag': 'train/cls_loss', 'value': 0.98966}, {'tag': 'train/dfl_loss', 'value': 0.86732}, {'tag': 'metrics/precision(B)', 'value': 0.92821}, {'tag': 'metrics/recall(B)', 'value': 0.93015}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.73109}, {'tag': 'val/box_loss', 'value': 0.80872}, {'tag': 'val/cls_loss', 'value': 0.99428}, {'tag': 'val/dfl_loss', 'value': 0.87121}, {'tag': 'lr/pg0', 'value': 0.004456}, {'tag': 'lr/pg1', 'value': 0.004456}, {'tag': 'lr/pg2', 'value': 0.004456}], [{'tag': 'epoch', 'value': 30.0}, {'tag': 'train/box_loss', 'value': 0.79537}, {'tag': 'train/cls_loss', 'value': 0.92945}, {'tag': 'train/dfl_loss', 'value': 0.86559}, {'tag': 'metrics/precision(B)', 'value': 0.95839}, {'tag': 'metrics/recall(B)', 'value': 0.93833}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.78409}, {'tag': 'val/box_loss', 'value': 0.77977}, {'tag': 'val/cls_loss', 'value': 0.95821}, {'tag': 'val/dfl_loss', 'value': 0.86851}, {'tag': 'lr/pg0', 'value': 0.004258}, {'tag': 'lr/pg1', 'value': 0.004258}, {'tag': 'lr/pg2', 'value': 0.004258}], [{'tag': 'epoch', 'value': 31.0}, {'tag': 'train/box_loss', 'value': 0.77023}, {'tag': 'train/cls_loss', 'value': 0.94962}, {'tag': 'train/dfl_loss', 'value': 0.88479}, {'tag': 'metrics/precision(B)', 'value': 0.98989}, {'tag': 'metrics/recall(B)', 'value': 0.95648}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.75148}, {'tag': 'val/box_loss', 'value': 0.78007}, {'tag': 'val/cls_loss', 'value': 0.89375}, {'tag': 'val/dfl_loss', 'value': 0.87705}, {'tag': 'lr/pg0', 'value': 0.00406}, {'tag': 'lr/pg1', 'value': 0.00406}, {'tag': 'lr/pg2', 'value': 0.00406}], [{'tag': 'epoch', 'value': 32.0}, {'tag': 'train/box_loss', 'value': 0.79057}, {'tag': 'train/cls_loss', 'value': 0.95428}, {'tag': 'train/dfl_loss', 'value': 0.88757}, {'tag': 'metrics/precision(B)', 'value': 0.93244}, {'tag': 'metrics/recall(B)', 'value': 0.96261}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.79129}, {'tag': 'val/box_loss', 'value': 0.75298}, {'tag': 'val/cls_loss', 'value': 0.88759}, {'tag': 'val/dfl_loss', 'value': 0.87416}, {'tag': 'lr/pg0', 'value': 0.003862}, {'tag': 'lr/pg1', 'value': 0.003862}, {'tag': 'lr/pg2', 'value': 0.003862}], [{'tag': 'epoch', 'value': 33.0}, {'tag': 'train/box_loss', 'value': 0.73818}, {'tag': 'train/cls_loss', 'value': 0.83218}, {'tag': 'train/dfl_loss', 'value': 0.86076}, {'tag': 'metrics/precision(B)', 'value': 0.91245}, {'tag': 'metrics/recall(B)', 'value': 0.93454}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.72585}, {'tag': 'val/box_loss', 'value': 0.87456}, {'tag': 'val/cls_loss', 'value': 0.98438}, {'tag': 'val/dfl_loss', 'value': 0.90187}, {'tag': 'lr/pg0', 'value': 0.003664}, {'tag': 'lr/pg1', 'value': 0.003664}, {'tag': 'lr/pg2', 'value': 0.003664}], [{'tag': 'epoch', 'value': 34.0}, {'tag': 'train/box_loss', 'value': 0.75781}, {'tag': 'train/cls_loss', 'value': 0.85341}, {'tag': 'train/dfl_loss', 'value': 0.90921}, {'tag': 'metrics/precision(B)', 'value': 0.9415}, {'tag': 'metrics/recall(B)', 'value': 0.93708}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.80509}, {'tag': 'val/box_loss', 'value': 0.67393}, {'tag': 'val/cls_loss', 'value': 0.85319}, {'tag': 'val/dfl_loss', 'value': 0.86868}, {'tag': 'lr/pg0', 'value': 0.003466}, {'tag': 'lr/pg1', 'value': 0.003466}, {'tag': 'lr/pg2', 'value': 0.003466}], [{'tag': 'epoch', 'value': 35.0}, {'tag': 'train/box_loss', 'value': 0.75899}, {'tag': 'train/cls_loss', 'value': 0.86217}, {'tag': 'train/dfl_loss', 'value': 0.86025}, {'tag': 'metrics/precision(B)', 'value': 0.94246}, {'tag': 'metrics/recall(B)', 'value': 0.99159}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.84575}, {'tag': 'val/box_loss', 'value': 0.57185}, {'tag': 'val/cls_loss', 'value': 0.78657}, {'tag': 'val/dfl_loss', 'value': 0.85797}, {'tag': 'lr/pg0', 'value': 0.003268}, {'tag': 'lr/pg1', 'value': 0.003268}, {'tag': 'lr/pg2', 'value': 0.003268}], [{'tag': 'epoch', 'value': 36.0}, {'tag': 'train/box_loss', 'value': 0.63245}, {'tag': 'train/cls_loss', 'value': 0.8019}, {'tag': 'train/dfl_loss', 'value': 0.84047}, {'tag': 'metrics/precision(B)', 'value': 0.9576}, {'tag': 'metrics/recall(B)', 'value': 0.9928}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.78768}, {'tag': 'val/box_loss', 'value': 0.68497}, {'tag': 'val/cls_loss', 'value': 0.79247}, {'tag': 'val/dfl_loss', 'value': 0.87827}, {'tag': 'lr/pg0', 'value': 0.00307}, {'tag': 'lr/pg1', 'value': 0.00307}, {'tag': 'lr/pg2', 'value': 0.00307}], [{'tag': 'epoch', 'value': 37.0}, {'tag': 'train/box_loss', 'value': 0.66731}, {'tag': 'train/cls_loss', 'value': 0.78353}, {'tag': 'train/dfl_loss', 'value': 0.83544}, {'tag': 'metrics/precision(B)', 'value': 0.97591}, {'tag': 'metrics/recall(B)', 'value': 0.99855}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.78396}, {'tag': 'val/box_loss', 'value': 0.6314}, {'tag': 'val/cls_loss', 'value': 0.72621}, {'tag': 'val/dfl_loss', 'value': 0.86448}, {'tag': 'lr/pg0', 'value': 0.002872}, {'tag': 'lr/pg1', 'value': 0.002872}, {'tag': 'lr/pg2', 'value': 0.002872}], [{'tag': 'epoch', 'value': 38.0}, {'tag': 'train/box_loss', 'value': 0.62359}, {'tag': 'train/cls_loss', 'value': 0.77989}, {'tag': 'train/dfl_loss', 'value': 0.83821}, {'tag': 'metrics/precision(B)', 'value': 0.9597}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.8478}, {'tag': 'val/box_loss', 'value': 0.59794}, {'tag': 'val/cls_loss', 'value': 0.75299}, {'tag': 'val/dfl_loss', 'value': 0.85508}, {'tag': 'lr/pg0', 'value': 0.002674}, {'tag': 'lr/pg1', 'value': 0.002674}, {'tag': 'lr/pg2', 'value': 0.002674}], [{'tag': 'epoch', 'value': 39.0}, {'tag': 'train/box_loss', 'value': 0.66152}, {'tag': 'train/cls_loss', 'value': 0.79367}, {'tag': 'train/dfl_loss', 'value': 0.84285}, {'tag': 'metrics/precision(B)', 'value': 0.97159}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.80332}, {'tag': 'val/box_loss', 'value': 0.6401}, {'tag': 'val/cls_loss', 'value': 0.76566}, {'tag': 'val/dfl_loss', 'value': 0.85905}, {'tag': 'lr/pg0', 'value': 0.002476}, {'tag': 'lr/pg1', 'value': 0.002476}, {'tag': 'lr/pg2', 'value': 0.002476}], [{'tag': 'epoch', 'value': 40.0}, {'tag': 'train/box_loss', 'value': 0.64489}, {'tag': 'train/cls_loss', 'value': 0.7812}, {'tag': 'train/dfl_loss', 'value': 0.82501}, {'tag': 'metrics/precision(B)', 'value': 0.97996}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.85414}, {'tag': 'val/box_loss', 'value': 0.60572}, {'tag': 'val/cls_loss', 'value': 0.72412}, {'tag': 'val/dfl_loss', 'value': 0.85649}, {'tag': 'lr/pg0', 'value': 0.002278}, {'tag': 'lr/pg1', 'value': 0.002278}, {'tag': 'lr/pg2', 'value': 0.002278}], [{'tag': 'epoch', 'value': 41.0}, {'tag': 'train/box_loss', 'value': 0.64079}, {'tag': 'train/cls_loss', 'value': 0.76747}, {'tag': 'train/dfl_loss', 'value': 0.85391}, {'tag': 'metrics/precision(B)', 'value': 0.97218}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.80732}, {'tag': 'val/box_loss', 'value': 0.61813}, {'tag': 'val/cls_loss', 'value': 0.72431}, {'tag': 'val/dfl_loss', 'value': 0.86099}, {'tag': 'lr/pg0', 'value': 0.00208}, {'tag': 'lr/pg1', 'value': 0.00208}, {'tag': 'lr/pg2', 'value': 0.00208}], [{'tag': 'epoch', 'value': 42.0}, {'tag': 'train/box_loss', 'value': 0.67683}, {'tag': 'train/cls_loss', 'value': 0.76656}, {'tag': 'train/dfl_loss', 'value': 0.86599}, {'tag': 'metrics/precision(B)', 'value': 0.97355}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.80804}, {'tag': 'val/box_loss', 'value': 0.68876}, {'tag': 'val/cls_loss', 'value': 0.73461}, {'tag': 'val/dfl_loss', 'value': 0.86239}, {'tag': 'lr/pg0', 'value': 0.001882}, {'tag': 'lr/pg1', 'value': 0.001882}, {'tag': 'lr/pg2', 'value': 0.001882}], [{'tag': 'epoch', 'value': 43.0}, {'tag': 'train/box_loss', 'value': 0.62936}, {'tag': 'train/cls_loss', 'value': 0.77001}, {'tag': 'train/dfl_loss', 'value': 0.81959}, {'tag': 'metrics/precision(B)', 'value': 0.97251}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.84721}, {'tag': 'val/box_loss', 'value': 0.58338}, {'tag': 'val/cls_loss', 'value': 0.677}, {'tag': 'val/dfl_loss', 'value': 0.85235}, {'tag': 'lr/pg0', 'value': 0.001684}, {'tag': 'lr/pg1', 'value': 0.001684}, {'tag': 'lr/pg2', 'value': 0.001684}], [{'tag': 'epoch', 'value': 44.0}, {'tag': 'train/box_loss', 'value': 0.60387}, {'tag': 'train/cls_loss', 'value': 0.71065}, {'tag': 'train/dfl_loss', 'value': 0.82747}, {'tag': 'metrics/precision(B)', 'value': 0.9811}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.85281}, {'tag': 'val/box_loss', 'value': 0.54992}, {'tag': 'val/cls_loss', 'value': 0.65668}, {'tag': 'val/dfl_loss', 'value': 0.84913}, {'tag': 'lr/pg0', 'value': 0.001486}, {'tag': 'lr/pg1', 'value': 0.001486}, {'tag': 'lr/pg2', 'value': 0.001486}], [{'tag': 'epoch', 'value': 45.0}, {'tag': 'train/box_loss', 'value': 0.53842}, {'tag': 'train/cls_loss', 'value': 0.72884}, {'tag': 'train/dfl_loss', 'value': 0.79554}, {'tag': 'metrics/precision(B)', 'value': 0.9839}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.87122}, {'tag': 'val/box_loss', 'value': 0.57804}, {'tag': 'val/cls_loss', 'value': 0.65473}, {'tag': 'val/dfl_loss', 'value': 0.84959}, {'tag': 'lr/pg0', 'value': 0.001288}, {'tag': 'lr/pg1', 'value': 0.001288}, {'tag': 'lr/pg2', 'value': 0.001288}], [{'tag': 'epoch', 'value': 46.0}, {'tag': 'train/box_loss', 'value': 0.59971}, {'tag': 'train/cls_loss', 'value': 0.72992}, {'tag': 'train/dfl_loss', 'value': 0.82427}, {'tag': 'metrics/precision(B)', 'value': 0.98404}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.82291}, {'tag': 'val/box_loss', 'value': 0.57821}, {'tag': 'val/cls_loss', 'value': 0.65307}, {'tag': 'val/dfl_loss', 'value': 0.85208}, {'tag': 'lr/pg0', 'value': 0.00109}, {'tag': 'lr/pg1', 'value': 0.00109}, {'tag': 'lr/pg2', 'value': 0.00109}], [{'tag': 'epoch', 'value': 47.0}, {'tag': 'train/box_loss', 'value': 0.57502}, {'tag': 'train/cls_loss', 'value': 0.69421}, {'tag': 'train/dfl_loss', 'value': 0.81567}, {'tag': 'metrics/precision(B)', 'value': 0.98222}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.83583}, {'tag': 'val/box_loss', 'value': 0.53284}, {'tag': 'val/cls_loss', 'value': 0.61917}, {'tag': 'val/dfl_loss', 'value': 0.84631}, {'tag': 'lr/pg0', 'value': 0.000892}, {'tag': 'lr/pg1', 'value': 0.000892}, {'tag': 'lr/pg2', 'value': 0.000892}], [{'tag': 'epoch', 'value': 48.0}, {'tag': 'train/box_loss', 'value': 0.63551}, {'tag': 'train/cls_loss', 'value': 0.73616}, {'tag': 'train/dfl_loss', 'value': 0.87011}, {'tag': 'metrics/precision(B)', 'value': 0.97936}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.87472}, {'tag': 'val/box_loss', 'value': 0.5353}, {'tag': 'val/cls_loss', 'value': 0.60173}, {'tag': 'val/dfl_loss', 'value': 0.84827}, {'tag': 'lr/pg0', 'value': 0.000694}, {'tag': 'lr/pg1', 'value': 0.000694}, {'tag': 'lr/pg2', 'value': 0.000694}], [{'tag': 'epoch', 'value': 49.0}, {'tag': 'train/box_loss', 'value': 0.55194}, {'tag': 'train/cls_loss', 'value': 0.67761}, {'tag': 'train/dfl_loss', 'value': 0.81468}, {'tag': 'metrics/precision(B)', 'value': 0.97809}, {'tag': 'metrics/recall(B)', 'value': 1.0}, {'tag': 'metrics/mAP50(B)', 'value': 0.995}, {'tag': 'metrics/mAP50-95(B)', 'value': 0.87472}, {'tag': 'val/box_loss', 'value': 0.52791}, {'tag': 'val/cls_loss', 'value': 0.60719}, {'tag': 'val/dfl_loss', 'value': 0.84775}, {'tag': 'lr/pg0', 'value': 0.000496}, {'tag': 'lr/pg1', 'value': 0.000496}, {'tag': 'lr/pg2', 'value': 0.000496}]])</pre> In\u00a0[13]: Copied! <pre>import torch\ntorch.use_deterministic_algorithms(False)\n</pre> import torch torch.use_deterministic_algorithms(False) In\u00a0[14]: Copied! <pre>dataset_dir = dataset.export(DataType.HUGGINGFACE)\ntrain_result = huggingface_hub.train(\n    dataset_dir,\n    image_size=320,\n    epochs=50,\n    batch_size=16\n)\ntrain_result\n</pre> dataset_dir = dataset.export(DataType.HUGGINGFACE) train_result = huggingface_hub.train(     dataset_dir,     image_size=320,     epochs=50,     batch_size=16 ) train_result <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/dataset/dataset.py:1051: UserWarning: datasets/mnist_det/exports/HUGGINGFACE already exists. Removing exist export and override.\n  warnings.warn(f\"{export_dir} already exists. Removing exist export and override.\")\n</pre> <pre>Downloading and preparing dataset generator/default to /home/lhj/.cache/huggingface/datasets/generator/default-2829f4fedc3b4500/0.0.0...\n</pre> <pre>                                                        \r</pre> <pre>Dataset generator downloaded and prepared to /home/lhj/.cache/huggingface/datasets/generator/default-2829f4fedc3b4500/0.0.0. Subsequent calls will reuse this data.\nDownloading and preparing dataset generator/default to /home/lhj/.cache/huggingface/datasets/generator/default-d5fbddcc04d40766/0.0.0...\n</pre> <pre>                                                        \r</pre> <pre>Dataset generator downloaded and prepared to /home/lhj/.cache/huggingface/datasets/generator/default-d5fbddcc04d40766/0.0.0. Subsequent calls will reuse this data.\nDownloading and preparing dataset generator/default to /home/lhj/.cache/huggingface/datasets/generator/default-948875159fe8df55/0.0.0...\n</pre> <pre>                                                        \r</pre> <pre>Dataset generator downloaded and prepared to /home/lhj/.cache/huggingface/datasets/generator/default-948875159fe8df55/0.0.0. Subsequent calls will reuse this data.\n</pre> <pre>Could not find image processor class in the image processor config or the model config. Loading based on pattern matching with the model's feature extractor configuration.\nThe `max_size` parameter is deprecated and will be removed in v4.26. Please specify in `size['longest_edge'] instead`.\nSome weights of DetrForObjectDetection were not initialized from the model checkpoint at facebook/detr-resnet-50 and are newly initialized because the shapes did not match:\n- class_labels_classifier.weight: found shape torch.Size([92, 256]) in the checkpoint and torch.Size([3, 256]) in the model instantiated\n- class_labels_classifier.bias: found shape torch.Size([92]) in the checkpoint and torch.Size([3]) in the model instantiated\nYou should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/hub/adapter/hugging_face/train_input_helper.py:173: UserWarning: pretrained model's image size is (800, 800), but you set (320, 320).\n  warnings.warn(f\"pretrained model's image size is {size}, but you set {self.image_size}.\")\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n  warnings.warn(\n</pre>        [  6/250 00:01 &lt; 01:20, 3.02 it/s, Epoch 1/50]      Epoch Training Loss Validation Loss 1 No log 1.385532 <p> Out[14]: <pre>TrainResult(best_ckpt_file=PosixPath('hubs/huggingface_mnist_detection/weights/best_ckpt'), last_ckpt_file=PosixPath('hubs/huggingface_mnist_detection/weights/last_ckpt'), metrics=[[{'tag': 'train_loss', 'value': 1.3855316638946533}, {'tag': 'train_runtime', 'value': 1.1718}, {'tag': 'train_samples_per_second', 'value': 68.271}, {'tag': 'train_steps_per_second', 'value': 8.534}, {'tag': 'epoch', 'value': 1.0}, {'tag': 'step', 'value': 5}, {'tag': 'loss', 'value': 5.2548}, {'tag': 'learning_rate', 'value': 4.9e-05}, {'tag': 'eval_loss', 'value': 1.2507762908935547}, {'tag': 'eval_runtime', 'value': 0.4487}, {'tag': 'eval_samples_per_second', 'value': 22.287}, {'tag': 'eval_steps_per_second', 'value': 4.457}], [{'tag': 'train_loss', 'value': 1.116162896156311}, {'tag': 'train_runtime', 'value': 1.1658}, {'tag': 'train_samples_per_second', 'value': 68.621}, {'tag': 'train_steps_per_second', 'value': 8.578}, {'tag': 'epoch', 'value': 2.0}, {'tag': 'step', 'value': 10}, {'tag': 'loss', 'value': 2.6792}, {'tag': 'learning_rate', 'value': 4.8e-05}, {'tag': 'eval_loss', 'value': 1.0957908630371094}, {'tag': 'eval_runtime', 'value': 0.4468}, {'tag': 'eval_samples_per_second', 'value': 22.383}, {'tag': 'eval_steps_per_second', 'value': 4.477}], [{'tag': 'train_loss', 'value': 0.9697614908218384}, {'tag': 'train_runtime', 'value': 1.1611}, {'tag': 'train_samples_per_second', 'value': 68.898}, {'tag': 'train_steps_per_second', 'value': 8.612}, {'tag': 'epoch', 'value': 3.0}, {'tag': 'step', 'value': 15}, {'tag': 'loss', 'value': 0.9371}, {'tag': 'learning_rate', 'value': 4.7e-05}, {'tag': 'eval_loss', 'value': 0.9554109573364258}, {'tag': 'eval_runtime', 'value': 0.4522}, {'tag': 'eval_samples_per_second', 'value': 22.115}, {'tag': 'eval_steps_per_second', 'value': 4.423}], [{'tag': 'train_loss', 'value': 0.7892210483551025}, {'tag': 'train_runtime', 'value': 1.1683}, {'tag': 'train_samples_per_second', 'value': 68.475}, {'tag': 'train_steps_per_second', 'value': 8.559}, {'tag': 'epoch', 'value': 4.0}, {'tag': 'step', 'value': 20}, {'tag': 'loss', 'value': 0.7902}, {'tag': 'learning_rate', 'value': 4.600000000000001e-05}, {'tag': 'eval_loss', 'value': 0.7245649099349976}, {'tag': 'eval_runtime', 'value': 0.4513}, {'tag': 'eval_samples_per_second', 'value': 22.16}, {'tag': 'eval_steps_per_second', 'value': 4.432}], [{'tag': 'train_loss', 'value': 0.6094344258308411}, {'tag': 'train_runtime', 'value': 1.1653}, {'tag': 'train_samples_per_second', 'value': 68.652}, {'tag': 'train_steps_per_second', 'value': 8.582}, {'tag': 'epoch', 'value': 5.0}, {'tag': 'step', 'value': 25}, {'tag': 'loss', 'value': 0.6806}, {'tag': 'learning_rate', 'value': 4.5e-05}, {'tag': 'eval_loss', 'value': 0.5630266070365906}, {'tag': 'eval_runtime', 'value': 0.4509}, {'tag': 'eval_samples_per_second', 'value': 22.18}, {'tag': 'eval_steps_per_second', 'value': 4.436}], [{'tag': 'train_loss', 'value': 0.5720860958099365}, {'tag': 'train_runtime', 'value': 1.1654}, {'tag': 'train_samples_per_second', 'value': 68.648}, {'tag': 'train_steps_per_second', 'value': 8.581}, {'tag': 'epoch', 'value': 6.0}, {'tag': 'step', 'value': 30}, {'tag': 'loss', 'value': 0.6367}, {'tag': 'learning_rate', 'value': 4.4000000000000006e-05}, {'tag': 'eval_loss', 'value': 0.6396136283874512}, {'tag': 'eval_runtime', 'value': 0.4465}, {'tag': 'eval_samples_per_second', 'value': 22.397}, {'tag': 'eval_steps_per_second', 'value': 4.479}], [{'tag': 'train_loss', 'value': 0.5628016591072083}, {'tag': 'train_runtime', 'value': 1.1577}, {'tag': 'train_samples_per_second', 'value': 69.102}, {'tag': 'train_steps_per_second', 'value': 8.638}, {'tag': 'epoch', 'value': 7.0}, {'tag': 'step', 'value': 35}, {'tag': 'loss', 'value': 0.5938}, {'tag': 'learning_rate', 'value': 4.3e-05}, {'tag': 'eval_loss', 'value': 0.61188805103302}, {'tag': 'eval_runtime', 'value': 0.4501}, {'tag': 'eval_samples_per_second', 'value': 22.217}, {'tag': 'eval_steps_per_second', 'value': 4.443}], [{'tag': 'train_loss', 'value': 0.5682467222213745}, {'tag': 'train_runtime', 'value': 1.1719}, {'tag': 'train_samples_per_second', 'value': 68.265}, {'tag': 'train_steps_per_second', 'value': 8.533}, {'tag': 'epoch', 'value': 8.0}, {'tag': 'step', 'value': 40}, {'tag': 'loss', 'value': 0.5956}, {'tag': 'learning_rate', 'value': 4.2e-05}, {'tag': 'eval_loss', 'value': 0.5520668029785156}, {'tag': 'eval_runtime', 'value': 0.4566}, {'tag': 'eval_samples_per_second', 'value': 21.903}, {'tag': 'eval_steps_per_second', 'value': 4.381}], [{'tag': 'train_loss', 'value': 0.5007809996604919}, {'tag': 'train_runtime', 'value': 1.1982}, {'tag': 'train_samples_per_second', 'value': 66.767}, {'tag': 'train_steps_per_second', 'value': 8.346}, {'tag': 'epoch', 'value': 9.0}, {'tag': 'step', 'value': 45}, {'tag': 'loss', 'value': 0.5926}, {'tag': 'learning_rate', 'value': 4.1e-05}, {'tag': 'eval_loss', 'value': 0.5047541856765747}, {'tag': 'eval_runtime', 'value': 0.4565}, {'tag': 'eval_samples_per_second', 'value': 21.907}, {'tag': 'eval_steps_per_second', 'value': 4.381}], [{'tag': 'train_loss', 'value': 0.50834059715271}, {'tag': 'train_runtime', 'value': 1.1682}, {'tag': 'train_samples_per_second', 'value': 68.479}, {'tag': 'train_steps_per_second', 'value': 8.56}, {'tag': 'epoch', 'value': 10.0}, {'tag': 'step', 'value': 50}, {'tag': 'loss', 'value': 0.5381}, {'tag': 'learning_rate', 'value': 4e-05}, {'tag': 'eval_loss', 'value': 0.5392290353775024}, {'tag': 'eval_runtime', 'value': 0.4562}, {'tag': 'eval_samples_per_second', 'value': 21.919}, {'tag': 'eval_steps_per_second', 'value': 4.384}], [{'tag': 'train_loss', 'value': 0.48940911889076233}, {'tag': 'train_runtime', 'value': 1.1677}, {'tag': 'train_samples_per_second', 'value': 68.511}, {'tag': 'train_steps_per_second', 'value': 8.564}, {'tag': 'epoch', 'value': 11.0}, {'tag': 'step', 'value': 55}, {'tag': 'loss', 'value': 0.5034}, {'tag': 'learning_rate', 'value': 3.9000000000000006e-05}, {'tag': 'eval_loss', 'value': 0.4892626702785492}, {'tag': 'eval_runtime', 'value': 0.4617}, {'tag': 'eval_samples_per_second', 'value': 21.659}, {'tag': 'eval_steps_per_second', 'value': 4.332}], [{'tag': 'train_loss', 'value': 0.46669650077819824}, {'tag': 'train_runtime', 'value': 1.1685}, {'tag': 'train_samples_per_second', 'value': 68.461}, {'tag': 'train_steps_per_second', 'value': 8.558}, {'tag': 'epoch', 'value': 12.0}, {'tag': 'step', 'value': 60}, {'tag': 'loss', 'value': 0.497}, {'tag': 'learning_rate', 'value': 3.8e-05}, {'tag': 'eval_loss', 'value': 0.47923794388771057}, {'tag': 'eval_runtime', 'value': 0.4504}, {'tag': 'eval_samples_per_second', 'value': 22.204}, {'tag': 'eval_steps_per_second', 'value': 4.441}], [{'tag': 'train_loss', 'value': 0.47684845328330994}, {'tag': 'train_runtime', 'value': 1.1654}, {'tag': 'train_samples_per_second', 'value': 68.643}, {'tag': 'train_steps_per_second', 'value': 8.58}, {'tag': 'epoch', 'value': 13.0}, {'tag': 'step', 'value': 65}, {'tag': 'loss', 'value': 0.5113}, {'tag': 'learning_rate', 'value': 3.7e-05}, {'tag': 'eval_loss', 'value': 0.5093619227409363}, {'tag': 'eval_runtime', 'value': 0.4563}, {'tag': 'eval_samples_per_second', 'value': 21.917}, {'tag': 'eval_steps_per_second', 'value': 4.383}], [{'tag': 'train_loss', 'value': 0.4997107982635498}, {'tag': 'train_runtime', 'value': 1.1755}, {'tag': 'train_samples_per_second', 'value': 68.055}, {'tag': 'train_steps_per_second', 'value': 8.507}, {'tag': 'epoch', 'value': 14.0}, {'tag': 'step', 'value': 70}, {'tag': 'loss', 'value': 0.493}, {'tag': 'learning_rate', 'value': 3.6e-05}, {'tag': 'eval_loss', 'value': 0.5527489185333252}, {'tag': 'eval_runtime', 'value': 0.4537}, {'tag': 'eval_samples_per_second', 'value': 22.041}, {'tag': 'eval_steps_per_second', 'value': 4.408}], [{'tag': 'train_loss', 'value': 0.44894537329673767}, {'tag': 'train_runtime', 'value': 1.173}, {'tag': 'train_samples_per_second', 'value': 68.201}, {'tag': 'train_steps_per_second', 'value': 8.525}, {'tag': 'epoch', 'value': 15.0}, {'tag': 'step', 'value': 75}, {'tag': 'loss', 'value': 0.4749}, {'tag': 'learning_rate', 'value': 3.5e-05}, {'tag': 'eval_loss', 'value': 0.4567878246307373}, {'tag': 'eval_runtime', 'value': 0.4599}, {'tag': 'eval_samples_per_second', 'value': 21.746}, {'tag': 'eval_steps_per_second', 'value': 4.349}], [{'tag': 'train_loss', 'value': 0.43230360746383667}, {'tag': 'train_runtime', 'value': 1.1746}, {'tag': 'train_samples_per_second', 'value': 68.109}, {'tag': 'train_steps_per_second', 'value': 8.514}, {'tag': 'epoch', 'value': 16.0}, {'tag': 'step', 'value': 80}, {'tag': 'loss', 'value': 0.4652}, {'tag': 'learning_rate', 'value': 3.4000000000000007e-05}, {'tag': 'eval_loss', 'value': 0.48362937569618225}, {'tag': 'eval_runtime', 'value': 0.4604}, {'tag': 'eval_samples_per_second', 'value': 21.72}, {'tag': 'eval_steps_per_second', 'value': 4.344}], [{'tag': 'train_loss', 'value': 0.45379438996315}, {'tag': 'train_runtime', 'value': 1.1678}, {'tag': 'train_samples_per_second', 'value': 68.508}, {'tag': 'train_steps_per_second', 'value': 8.563}, {'tag': 'epoch', 'value': 17.0}, {'tag': 'step', 'value': 85}, {'tag': 'loss', 'value': 0.4377}, {'tag': 'learning_rate', 'value': 3.3e-05}, {'tag': 'eval_loss', 'value': 0.4290856719017029}, {'tag': 'eval_runtime', 'value': 0.4525}, {'tag': 'eval_samples_per_second', 'value': 22.1}, {'tag': 'eval_steps_per_second', 'value': 4.42}], [{'tag': 'train_loss', 'value': 0.40530914068222046}, {'tag': 'train_runtime', 'value': 1.1686}, {'tag': 'train_samples_per_second', 'value': 68.457}, {'tag': 'train_steps_per_second', 'value': 8.557}, {'tag': 'epoch', 'value': 18.0}, {'tag': 'step', 'value': 90}, {'tag': 'loss', 'value': 0.4505}, {'tag': 'learning_rate', 'value': 3.2000000000000005e-05}, {'tag': 'eval_loss', 'value': 0.42434707283973694}, {'tag': 'eval_runtime', 'value': 0.4579}, {'tag': 'eval_samples_per_second', 'value': 21.84}, {'tag': 'eval_steps_per_second', 'value': 4.368}], [{'tag': 'train_loss', 'value': 0.4644232392311096}, {'tag': 'train_runtime', 'value': 1.1687}, {'tag': 'train_samples_per_second', 'value': 68.452}, {'tag': 'train_steps_per_second', 'value': 8.557}, {'tag': 'epoch', 'value': 19.0}, {'tag': 'step', 'value': 95}, {'tag': 'loss', 'value': 0.4229}, {'tag': 'learning_rate', 'value': 3.1e-05}, {'tag': 'eval_loss', 'value': 0.4124431014060974}, {'tag': 'eval_runtime', 'value': 0.4593}, {'tag': 'eval_samples_per_second', 'value': 21.77}, {'tag': 'eval_steps_per_second', 'value': 4.354}], [{'tag': 'train_loss', 'value': 0.4102630615234375}, {'tag': 'train_runtime', 'value': 1.1704}, {'tag': 'train_samples_per_second', 'value': 68.355}, {'tag': 'train_steps_per_second', 'value': 8.544}, {'tag': 'epoch', 'value': 20.0}, {'tag': 'step', 'value': 100}, {'tag': 'loss', 'value': 0.4188}, {'tag': 'learning_rate', 'value': 3e-05}, {'tag': 'eval_loss', 'value': 0.506877601146698}, {'tag': 'eval_runtime', 'value': 0.4591}, {'tag': 'eval_samples_per_second', 'value': 21.783}, {'tag': 'eval_steps_per_second', 'value': 4.357}], [{'tag': 'train_loss', 'value': 0.42519599199295044}, {'tag': 'train_runtime', 'value': 1.17}, {'tag': 'train_samples_per_second', 'value': 68.377}, {'tag': 'train_steps_per_second', 'value': 8.547}, {'tag': 'epoch', 'value': 21.0}, {'tag': 'step', 'value': 105}, {'tag': 'loss', 'value': 0.4177}, {'tag': 'learning_rate', 'value': 2.9e-05}, {'tag': 'eval_loss', 'value': 0.486731618642807}, {'tag': 'eval_runtime', 'value': 0.4567}, {'tag': 'eval_samples_per_second', 'value': 21.895}, {'tag': 'eval_steps_per_second', 'value': 4.379}], [{'tag': 'train_loss', 'value': 0.39331433176994324}, {'tag': 'train_runtime', 'value': 1.1673}, {'tag': 'train_samples_per_second', 'value': 68.535}, {'tag': 'train_steps_per_second', 'value': 8.567}, {'tag': 'epoch', 'value': 22.0}, {'tag': 'step', 'value': 110}, {'tag': 'loss', 'value': 0.448}, {'tag': 'learning_rate', 'value': 2.8000000000000003e-05}, {'tag': 'eval_loss', 'value': 0.3879864811897278}, {'tag': 'eval_runtime', 'value': 0.4583}, {'tag': 'eval_samples_per_second', 'value': 21.817}, {'tag': 'eval_steps_per_second', 'value': 4.363}], [{'tag': 'train_loss', 'value': 0.40909242630004883}, {'tag': 'train_runtime', 'value': 1.1724}, {'tag': 'train_samples_per_second', 'value': 68.237}, {'tag': 'train_steps_per_second', 'value': 8.53}, {'tag': 'epoch', 'value': 23.0}, {'tag': 'step', 'value': 115}, {'tag': 'loss', 'value': 0.4292}, {'tag': 'learning_rate', 'value': 2.7000000000000002e-05}, {'tag': 'eval_loss', 'value': 0.4384569227695465}, {'tag': 'eval_runtime', 'value': 0.4584}, {'tag': 'eval_samples_per_second', 'value': 21.813}, {'tag': 'eval_steps_per_second', 'value': 4.363}], [{'tag': 'train_loss', 'value': 0.3766937851905823}, {'tag': 'train_runtime', 'value': 1.1735}, {'tag': 'train_samples_per_second', 'value': 68.171}, {'tag': 'train_steps_per_second', 'value': 8.521}, {'tag': 'epoch', 'value': 24.0}, {'tag': 'step', 'value': 120}, {'tag': 'loss', 'value': 0.4239}, {'tag': 'learning_rate', 'value': 2.6000000000000002e-05}, {'tag': 'eval_loss', 'value': 0.4203525483608246}, {'tag': 'eval_runtime', 'value': 0.4597}, {'tag': 'eval_samples_per_second', 'value': 21.755}, {'tag': 'eval_steps_per_second', 'value': 4.351}], [{'tag': 'train_loss', 'value': 0.3570360243320465}, {'tag': 'train_runtime', 'value': 1.1695}, {'tag': 'train_samples_per_second', 'value': 68.404}, {'tag': 'train_steps_per_second', 'value': 8.55}, {'tag': 'epoch', 'value': 25.0}, {'tag': 'step', 'value': 125}, {'tag': 'loss', 'value': 0.4064}, {'tag': 'learning_rate', 'value': 2.5e-05}, {'tag': 'eval_loss', 'value': 0.37610846757888794}, {'tag': 'eval_runtime', 'value': 0.4514}, {'tag': 'eval_samples_per_second', 'value': 22.151}, {'tag': 'eval_steps_per_second', 'value': 4.43}], [{'tag': 'train_loss', 'value': 0.34380871057510376}, {'tag': 'train_runtime', 'value': 1.1724}, {'tag': 'train_samples_per_second', 'value': 68.237}, {'tag': 'train_steps_per_second', 'value': 8.53}, {'tag': 'epoch', 'value': 26.0}, {'tag': 'step', 'value': 130}, {'tag': 'loss', 'value': 0.3763}, {'tag': 'learning_rate', 'value': 2.4e-05}, {'tag': 'eval_loss', 'value': 0.42806974053382874}, {'tag': 'eval_runtime', 'value': 0.4629}, {'tag': 'eval_samples_per_second', 'value': 21.601}, {'tag': 'eval_steps_per_second', 'value': 4.32}], [{'tag': 'train_loss', 'value': 0.37548738718032837}, {'tag': 'train_runtime', 'value': 1.1741}, {'tag': 'train_samples_per_second', 'value': 68.138}, {'tag': 'train_steps_per_second', 'value': 8.517}, {'tag': 'epoch', 'value': 27.0}, {'tag': 'step', 'value': 135}, {'tag': 'loss', 'value': 0.3836}, {'tag': 'learning_rate', 'value': 2.3000000000000003e-05}, {'tag': 'eval_loss', 'value': 0.39327436685562134}, {'tag': 'eval_runtime', 'value': 0.4622}, {'tag': 'eval_samples_per_second', 'value': 21.636}, {'tag': 'eval_steps_per_second', 'value': 4.327}], [{'tag': 'train_loss', 'value': 0.3448293209075928}, {'tag': 'train_runtime', 'value': 1.1668}, {'tag': 'train_samples_per_second', 'value': 68.563}, {'tag': 'train_steps_per_second', 'value': 8.57}, {'tag': 'epoch', 'value': 28.0}, {'tag': 'step', 'value': 140}, {'tag': 'loss', 'value': 0.3569}, {'tag': 'learning_rate', 'value': 2.2000000000000003e-05}, {'tag': 'eval_loss', 'value': 0.36112552881240845}, {'tag': 'eval_runtime', 'value': 0.4575}, {'tag': 'eval_samples_per_second', 'value': 21.856}, {'tag': 'eval_steps_per_second', 'value': 4.371}], [{'tag': 'train_loss', 'value': 0.3172988295555115}, {'tag': 'train_runtime', 'value': 1.1707}, {'tag': 'train_samples_per_second', 'value': 68.333}, {'tag': 'train_steps_per_second', 'value': 8.542}, {'tag': 'epoch', 'value': 29.0}, {'tag': 'step', 'value': 145}, {'tag': 'loss', 'value': 0.3804}, {'tag': 'learning_rate', 'value': 2.1e-05}, {'tag': 'eval_loss', 'value': 0.3893052339553833}, {'tag': 'eval_runtime', 'value': 0.4516}, {'tag': 'eval_samples_per_second', 'value': 22.144}, {'tag': 'eval_steps_per_second', 'value': 4.429}], [{'tag': 'train_loss', 'value': 0.316042423248291}, {'tag': 'train_runtime', 'value': 1.1686}, {'tag': 'train_samples_per_second', 'value': 68.458}, {'tag': 'train_steps_per_second', 'value': 8.557}, {'tag': 'epoch', 'value': 30.0}, {'tag': 'step', 'value': 150}, {'tag': 'loss', 'value': 0.361}, {'tag': 'learning_rate', 'value': 2e-05}, {'tag': 'eval_loss', 'value': 0.37002676725387573}, {'tag': 'eval_runtime', 'value': 0.46}, {'tag': 'eval_samples_per_second', 'value': 21.739}, {'tag': 'eval_steps_per_second', 'value': 4.348}], [{'tag': 'train_loss', 'value': 0.3621141016483307}, {'tag': 'train_runtime', 'value': 1.1456}, {'tag': 'train_samples_per_second', 'value': 69.832}, {'tag': 'train_steps_per_second', 'value': 8.729}, {'tag': 'epoch', 'value': 31.0}, {'tag': 'step', 'value': 155}, {'tag': 'loss', 'value': 0.3488}, {'tag': 'learning_rate', 'value': 1.9e-05}, {'tag': 'eval_loss', 'value': 0.455256849527359}, {'tag': 'eval_runtime', 'value': 0.4605}, {'tag': 'eval_samples_per_second', 'value': 21.714}, {'tag': 'eval_steps_per_second', 'value': 4.343}], [{'tag': 'train_loss', 'value': 0.3087203800678253}, {'tag': 'train_runtime', 'value': 1.1531}, {'tag': 'train_samples_per_second', 'value': 69.381}, {'tag': 'train_steps_per_second', 'value': 8.673}, {'tag': 'epoch', 'value': 32.0}, {'tag': 'step', 'value': 160}, {'tag': 'loss', 'value': 0.3508}, {'tag': 'learning_rate', 'value': 1.8e-05}, {'tag': 'eval_loss', 'value': 0.36367955803871155}, {'tag': 'eval_runtime', 'value': 0.4595}, {'tag': 'eval_samples_per_second', 'value': 21.763}, {'tag': 'eval_steps_per_second', 'value': 4.353}], [{'tag': 'train_loss', 'value': 0.3196394443511963}, {'tag': 'train_runtime', 'value': 1.2419}, {'tag': 'train_samples_per_second', 'value': 64.417}, {'tag': 'train_steps_per_second', 'value': 8.052}, {'tag': 'epoch', 'value': 33.0}, {'tag': 'step', 'value': 165}, {'tag': 'loss', 'value': 0.3562}, {'tag': 'learning_rate', 'value': 1.7000000000000003e-05}, {'tag': 'eval_loss', 'value': 0.326036274433136}, {'tag': 'eval_runtime', 'value': 0.4591}, {'tag': 'eval_samples_per_second', 'value': 21.783}, {'tag': 'eval_steps_per_second', 'value': 4.357}], [{'tag': 'train_loss', 'value': 0.32606521248817444}, {'tag': 'train_runtime', 'value': 1.1864}, {'tag': 'train_samples_per_second', 'value': 67.432}, {'tag': 'train_steps_per_second', 'value': 8.429}, {'tag': 'epoch', 'value': 34.0}, {'tag': 'step', 'value': 170}, {'tag': 'loss', 'value': 0.3585}, {'tag': 'learning_rate', 'value': 1.6000000000000003e-05}, {'tag': 'eval_loss', 'value': 0.3714372515678406}, {'tag': 'eval_runtime', 'value': 0.4622}, {'tag': 'eval_samples_per_second', 'value': 21.636}, {'tag': 'eval_steps_per_second', 'value': 4.327}], [{'tag': 'train_loss', 'value': 0.3009313642978668}, {'tag': 'train_runtime', 'value': 1.1715}, {'tag': 'train_samples_per_second', 'value': 68.29}, {'tag': 'train_steps_per_second', 'value': 8.536}, {'tag': 'epoch', 'value': 35.0}, {'tag': 'step', 'value': 175}, {'tag': 'loss', 'value': 0.3604}, {'tag': 'learning_rate', 'value': 1.5e-05}, {'tag': 'eval_loss', 'value': 0.3805556893348694}, {'tag': 'eval_runtime', 'value': 0.4599}, {'tag': 'eval_samples_per_second', 'value': 21.743}, {'tag': 'eval_steps_per_second', 'value': 4.349}], [{'tag': 'train_loss', 'value': 0.2820999026298523}, {'tag': 'train_runtime', 'value': 1.1717}, {'tag': 'train_samples_per_second', 'value': 68.275}, {'tag': 'train_steps_per_second', 'value': 8.534}, {'tag': 'epoch', 'value': 36.0}, {'tag': 'step', 'value': 180}, {'tag': 'loss', 'value': 0.3359}, {'tag': 'learning_rate', 'value': 1.4000000000000001e-05}, {'tag': 'eval_loss', 'value': 0.3148360252380371}, {'tag': 'eval_runtime', 'value': 0.4612}, {'tag': 'eval_samples_per_second', 'value': 21.682}, {'tag': 'eval_steps_per_second', 'value': 4.336}], [{'tag': 'train_loss', 'value': 0.3010083734989166}, {'tag': 'train_runtime', 'value': 1.1705}, {'tag': 'train_samples_per_second', 'value': 68.349}, {'tag': 'train_steps_per_second', 'value': 8.544}, {'tag': 'epoch', 'value': 37.0}, {'tag': 'step', 'value': 185}, {'tag': 'loss', 'value': 0.3514}, {'tag': 'learning_rate', 'value': 1.3000000000000001e-05}, {'tag': 'eval_loss', 'value': 0.35093894600868225}, {'tag': 'eval_runtime', 'value': 0.4593}, {'tag': 'eval_samples_per_second', 'value': 21.771}, {'tag': 'eval_steps_per_second', 'value': 4.354}], [{'tag': 'train_loss', 'value': 0.3155757486820221}, {'tag': 'train_runtime', 'value': 1.1744}, {'tag': 'train_samples_per_second', 'value': 68.119}, {'tag': 'train_steps_per_second', 'value': 8.515}, {'tag': 'epoch', 'value': 38.0}, {'tag': 'step', 'value': 190}, {'tag': 'loss', 'value': 0.3322}, {'tag': 'learning_rate', 'value': 1.2e-05}, {'tag': 'eval_loss', 'value': 0.36943158507347107}, {'tag': 'eval_runtime', 'value': 0.4623}, {'tag': 'eval_samples_per_second', 'value': 21.631}, {'tag': 'eval_steps_per_second', 'value': 4.326}], [{'tag': 'train_loss', 'value': 0.29229164123535156}, {'tag': 'train_runtime', 'value': 1.1735}, {'tag': 'train_samples_per_second', 'value': 68.174}, {'tag': 'train_steps_per_second', 'value': 8.522}, {'tag': 'epoch', 'value': 39.0}, {'tag': 'step', 'value': 195}, {'tag': 'loss', 'value': 0.3332}, {'tag': 'learning_rate', 'value': 1.1000000000000001e-05}, {'tag': 'eval_loss', 'value': 0.32007449865341187}, {'tag': 'eval_runtime', 'value': 0.4705}, {'tag': 'eval_samples_per_second', 'value': 21.253}, {'tag': 'eval_steps_per_second', 'value': 4.251}], [{'tag': 'train_loss', 'value': 0.28720229864120483}, {'tag': 'train_runtime', 'value': 1.172}, {'tag': 'train_samples_per_second', 'value': 68.262}, {'tag': 'train_steps_per_second', 'value': 8.533}, {'tag': 'epoch', 'value': 40.0}, {'tag': 'step', 'value': 200}, {'tag': 'loss', 'value': 0.3251}, {'tag': 'learning_rate', 'value': 1e-05}, {'tag': 'eval_loss', 'value': 0.33731579780578613}, {'tag': 'eval_runtime', 'value': 0.4666}, {'tag': 'eval_samples_per_second', 'value': 21.432}, {'tag': 'eval_steps_per_second', 'value': 4.286}], [{'tag': 'train_loss', 'value': 0.2932036519050598}, {'tag': 'train_runtime', 'value': 1.1724}, {'tag': 'train_samples_per_second', 'value': 68.235}, {'tag': 'train_steps_per_second', 'value': 8.529}, {'tag': 'epoch', 'value': 41.0}, {'tag': 'step', 'value': 205}, {'tag': 'loss', 'value': 0.3193}, {'tag': 'learning_rate', 'value': 9e-06}, {'tag': 'eval_loss', 'value': 0.33646273612976074}, {'tag': 'eval_runtime', 'value': 0.455}, {'tag': 'eval_samples_per_second', 'value': 21.979}, {'tag': 'eval_steps_per_second', 'value': 4.396}], [{'tag': 'train_loss', 'value': 0.27874556183815}, {'tag': 'train_runtime', 'value': 1.1722}, {'tag': 'train_samples_per_second', 'value': 68.247}, {'tag': 'train_steps_per_second', 'value': 8.531}, {'tag': 'epoch', 'value': 42.0}, {'tag': 'step', 'value': 210}, {'tag': 'loss', 'value': 0.3241}, {'tag': 'learning_rate', 'value': 8.000000000000001e-06}, {'tag': 'eval_loss', 'value': 0.3634243905544281}, {'tag': 'eval_runtime', 'value': 0.4525}, {'tag': 'eval_samples_per_second', 'value': 22.101}, {'tag': 'eval_steps_per_second', 'value': 4.42}], [{'tag': 'train_loss', 'value': 0.2531836926937103}, {'tag': 'train_runtime', 'value': 1.1701}, {'tag': 'train_samples_per_second', 'value': 68.368}, {'tag': 'train_steps_per_second', 'value': 8.546}, {'tag': 'epoch', 'value': 43.0}, {'tag': 'step', 'value': 215}, {'tag': 'loss', 'value': 0.3245}, {'tag': 'learning_rate', 'value': 7.000000000000001e-06}, {'tag': 'eval_loss', 'value': 0.3013628423213959}, {'tag': 'eval_runtime', 'value': 0.4578}, {'tag': 'eval_samples_per_second', 'value': 21.844}, {'tag': 'eval_steps_per_second', 'value': 4.369}], [{'tag': 'train_loss', 'value': 0.2542426884174347}, {'tag': 'train_runtime', 'value': 1.174}, {'tag': 'train_samples_per_second', 'value': 68.142}, {'tag': 'train_steps_per_second', 'value': 8.518}, {'tag': 'epoch', 'value': 44.0}, {'tag': 'step', 'value': 220}, {'tag': 'loss', 'value': 0.3095}, {'tag': 'learning_rate', 'value': 6e-06}, {'tag': 'eval_loss', 'value': 0.33255600929260254}, {'tag': 'eval_runtime', 'value': 0.4516}, {'tag': 'eval_samples_per_second', 'value': 22.144}, {'tag': 'eval_steps_per_second', 'value': 4.429}], [{'tag': 'train_loss', 'value': 0.2652783691883087}, {'tag': 'train_runtime', 'value': 1.1691}, {'tag': 'train_samples_per_second', 'value': 68.43}, {'tag': 'train_steps_per_second', 'value': 8.554}, {'tag': 'epoch', 'value': 45.0}, {'tag': 'step', 'value': 225}, {'tag': 'loss', 'value': 0.313}, {'tag': 'learning_rate', 'value': 5e-06}, {'tag': 'eval_loss', 'value': 0.3318539261817932}, {'tag': 'eval_runtime', 'value': 0.4564}, {'tag': 'eval_samples_per_second', 'value': 21.911}, {'tag': 'eval_steps_per_second', 'value': 4.382}], [{'tag': 'train_loss', 'value': 0.2640072703361511}, {'tag': 'train_runtime', 'value': 1.1775}, {'tag': 'train_samples_per_second', 'value': 67.942}, {'tag': 'train_steps_per_second', 'value': 8.493}, {'tag': 'epoch', 'value': 46.0}, {'tag': 'step', 'value': 230}, {'tag': 'loss', 'value': 0.3061}, {'tag': 'learning_rate', 'value': 4.000000000000001e-06}, {'tag': 'eval_loss', 'value': 0.33584803342819214}, {'tag': 'eval_runtime', 'value': 0.4541}, {'tag': 'eval_samples_per_second', 'value': 22.022}, {'tag': 'eval_steps_per_second', 'value': 4.404}], [{'tag': 'train_loss', 'value': 0.2537235617637634}, {'tag': 'train_runtime', 'value': 1.1721}, {'tag': 'train_samples_per_second', 'value': 68.255}, {'tag': 'train_steps_per_second', 'value': 8.532}, {'tag': 'epoch', 'value': 47.0}, {'tag': 'step', 'value': 235}, {'tag': 'loss', 'value': 0.3136}, {'tag': 'learning_rate', 'value': 3e-06}, {'tag': 'eval_loss', 'value': 0.3733289837837219}, {'tag': 'eval_runtime', 'value': 0.4567}, {'tag': 'eval_samples_per_second', 'value': 21.897}, {'tag': 'eval_steps_per_second', 'value': 4.379}], [{'tag': 'train_loss', 'value': 0.27394717931747437}, {'tag': 'train_runtime', 'value': 1.1786}, {'tag': 'train_samples_per_second', 'value': 67.875}, {'tag': 'train_steps_per_second', 'value': 8.484}, {'tag': 'epoch', 'value': 48.0}, {'tag': 'step', 'value': 240}, {'tag': 'loss', 'value': 0.3134}, {'tag': 'learning_rate', 'value': 2.0000000000000003e-06}, {'tag': 'eval_loss', 'value': 0.3344195485115051}, {'tag': 'eval_runtime', 'value': 0.4558}, {'tag': 'eval_samples_per_second', 'value': 21.938}, {'tag': 'eval_steps_per_second', 'value': 4.388}], [{'tag': 'train_loss', 'value': 0.276274174451828}, {'tag': 'train_runtime', 'value': 1.1862}, {'tag': 'train_samples_per_second', 'value': 67.443}, {'tag': 'train_steps_per_second', 'value': 8.43}, {'tag': 'epoch', 'value': 49.0}, {'tag': 'step', 'value': 245}, {'tag': 'loss', 'value': 0.3139}, {'tag': 'learning_rate', 'value': 1.0000000000000002e-06}, {'tag': 'eval_loss', 'value': 0.34479618072509766}, {'tag': 'eval_runtime', 'value': 0.4645}, {'tag': 'eval_samples_per_second', 'value': 21.527}, {'tag': 'eval_steps_per_second', 'value': 4.305}], [{'tag': 'train_loss', 'value': 0.2610689103603363}, {'tag': 'train_runtime', 'value': 1.169}, {'tag': 'train_samples_per_second', 'value': 68.432}, {'tag': 'train_steps_per_second', 'value': 8.554}, {'tag': 'epoch', 'value': 50.0}, {'tag': 'step', 'value': 250}, {'tag': 'loss', 'value': 0.3131}, {'tag': 'learning_rate', 'value': 0.0}, {'tag': 'eval_loss', 'value': 0.3211144804954529}, {'tag': 'eval_runtime', 'value': 0.4552}, {'tag': 'eval_samples_per_second', 'value': 21.967}, {'tag': 'eval_steps_per_second', 'value': 4.393}]])</pre> In\u00a0[15]: Copied! <pre>dataset_dir = dataset.export(DataType.TX_MODEL)\ntrain_result = tx_model_hub.train(\n    dataset_dir,\n    image_size=320,\n    epochs=50,\n    batch_size=16,\n    pretrained_model=\"base_models/detectors/small/model.pth\"\n)\ntrain_result\n</pre> dataset_dir = dataset.export(DataType.TX_MODEL) train_result = tx_model_hub.train(     dataset_dir,     image_size=320,     epochs=50,     batch_size=16,     pretrained_model=\"base_models/detectors/small/model.pth\" ) train_result <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/waffle_hub/dataset/dataset.py:1051: UserWarning: datasets/mnist_det/exports/COCO already exists. Removing exist export and override.\n  warnings.warn(f\"{export_dir} already exists. Removing exist export and override.\")\n2023-05-03 13:30:32.716 | WARNING  | autocare_tx_model.core.utils.checkpoint:load_ckpt:44 - Shape of head.m.0.weight in checkpoint is torch.Size([255, 128, 1, 1]), while shape of head.m.0.weight in model is torch.Size([21, 128, 1, 1]).\n2023-05-03 13:30:32.717 | WARNING  | autocare_tx_model.core.utils.checkpoint:load_ckpt:44 - Shape of head.m.0.bias in checkpoint is torch.Size([255]), while shape of head.m.0.bias in model is torch.Size([21]).\n2023-05-03 13:30:32.717 | WARNING  | autocare_tx_model.core.utils.checkpoint:load_ckpt:44 - Shape of head.m.1.weight in checkpoint is torch.Size([255, 256, 1, 1]), while shape of head.m.1.weight in model is torch.Size([21, 256, 1, 1]).\n2023-05-03 13:30:32.717 | WARNING  | autocare_tx_model.core.utils.checkpoint:load_ckpt:44 - Shape of head.m.1.bias in checkpoint is torch.Size([255]), while shape of head.m.1.bias in model is torch.Size([21]).\n2023-05-03 13:30:32.718 | WARNING  | autocare_tx_model.core.utils.checkpoint:load_ckpt:44 - Shape of head.m.2.weight in checkpoint is torch.Size([255, 512, 1, 1]), while shape of head.m.2.weight in model is torch.Size([21, 512, 1, 1]).\n2023-05-03 13:30:32.718 | WARNING  | autocare_tx_model.core.utils.checkpoint:load_ckpt:44 - Shape of head.m.2.bias in checkpoint is torch.Size([255]), while shape of head.m.2.bias in model is torch.Size([21]).\n</pre> <pre>loading annotations into memory...\nDone (t=0.00s)\ncreating index...\nindex created!\nnumber of img_files in DB: 80\n</pre> <pre>Scanning labels datasets/mnist_det/exports/COCO/train.json (80 found, 0 missing, 0 empty, 0 duplicate, for 80 images): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 80/80 [00:00&lt;00:00, 42646.71it/s]\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/albumentations/augmentations/dropout/cutout.py:49: FutureWarning: Cutout has been deprecated. Please use CoarseDropout\n  warnings.warn(\n</pre> <pre>loading annotations into memory...\nDone (t=0.00s)\ncreating index...\nindex created!\nnumber of img_files in DB: 10\n</pre> <pre>Scanning labels datasets/mnist_det/exports/COCO/val.json (10 found, 0 missing, 0 empty, 0 duplicate, for 10 images): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:00&lt;00:00, 30240.12it/s]\n</pre> <pre>loading annotations into memory...\nDone (t=0.00s)\ncreating index...\nindex created!\nnumber of img_files in DB: 10\n</pre> <pre>Scanning labels datasets/mnist_det/exports/COCO/test.json (10 found, 0 missing, 0 empty, 0 duplicate, for 10 images): 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 10/10 [00:00&lt;00:00, 38164.73it/s]\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/autocare_tx_model/tools/train.py:72: UserWarning: You have chosen to seed training. This will turn on the CUDNN deterministic setting, which can slow down your training considerably! You may see unexpected behavior when restarting from checkpoints.\n  warnings.warn(\n2023-05-03 13:30:32.737 | INFO     | autocare_tx_model.core.trainer.base_trainer:train:191 - Training start...\n2023-05-03 13:30:32.805 | INFO     | autocare_tx_model.core.trainer.base_trainer:_get_optimizer:142 - Optimizer groups: 60 .bias, 60 conv.weight, 57 other\n2023-05-03 13:30:32.839 | INFO     | autocare_tx_model.core.utils.functions:check_gpu_availability:48 - Model summary:\n ====================================================================================================\nLayer (type:depth-idx)                             Output Shape              Param #\n====================================================================================================\nYOLOv5                                             [1, 6300, 4]              --\n\u251c\u2500YOLOv5Backbone: 1-1                              [1, 128, 40, 40]          --\n\u2502    \u2514\u2500Conv: 2-1                                   [1, 32, 160, 160]         --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-1                            [1, 32, 160, 160]         3,456\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-2                       [1, 32, 160, 160]         64\n\u2502    \u2502    \u2514\u2500SiLU: 3-3                              [1, 32, 160, 160]         --\n\u2502    \u2514\u2500Conv: 2-2                                   [1, 64, 80, 80]           --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-4                            [1, 64, 80, 80]           18,432\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-5                       [1, 64, 80, 80]           128\n\u2502    \u2502    \u2514\u2500SiLU: 3-6                              [1, 64, 80, 80]           --\n\u2502    \u2514\u2500C3: 2-3                                     [1, 64, 80, 80]           --\n\u2502    \u2502    \u2514\u2500Conv: 3-7                              [1, 32, 80, 80]           2,112\n\u2502    \u2502    \u2514\u2500Sequential: 3-8                        [1, 32, 80, 80]           10,368\n\u2502    \u2502    \u2514\u2500Conv: 3-9                              [1, 32, 80, 80]           2,112\n\u2502    \u2502    \u2514\u2500Conv: 3-10                             [1, 64, 80, 80]           4,224\n\u2502    \u2514\u2500Conv: 2-4                                   [1, 128, 40, 40]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-11                           [1, 128, 40, 40]          73,728\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-12                      [1, 128, 40, 40]          256\n\u2502    \u2502    \u2514\u2500SiLU: 3-13                             [1, 128, 40, 40]          --\n\u2502    \u2514\u2500C3: 2-5                                     [1, 128, 40, 40]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-14                             [1, 64, 40, 40]           8,320\n\u2502    \u2502    \u2514\u2500Sequential: 3-15                       [1, 64, 40, 40]           82,432\n\u2502    \u2502    \u2514\u2500Conv: 3-16                             [1, 64, 40, 40]           8,320\n\u2502    \u2502    \u2514\u2500Conv: 3-17                             [1, 128, 40, 40]          16,640\n\u2502    \u2514\u2500Conv: 2-6                                   [1, 256, 20, 20]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-18                           [1, 256, 20, 20]          294,912\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-19                      [1, 256, 20, 20]          512\n\u2502    \u2502    \u2514\u2500SiLU: 3-20                             [1, 256, 20, 20]          --\n\u2502    \u2514\u2500C3: 2-7                                     [1, 256, 20, 20]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-21                             [1, 128, 20, 20]          33,024\n\u2502    \u2502    \u2514\u2500Sequential: 3-22                       [1, 128, 20, 20]          493,056\n\u2502    \u2502    \u2514\u2500Conv: 3-23                             [1, 128, 20, 20]          33,024\n\u2502    \u2502    \u2514\u2500Conv: 3-24                             [1, 256, 20, 20]          66,048\n\u2502    \u2514\u2500Conv: 2-8                                   [1, 512, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-25                           [1, 512, 10, 10]          1,179,648\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-26                      [1, 512, 10, 10]          1,024\n\u2502    \u2502    \u2514\u2500SiLU: 3-27                             [1, 512, 10, 10]          --\n\u2502    \u2514\u2500C3: 2-9                                     [1, 512, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-28                             [1, 256, 10, 10]          131,584\n\u2502    \u2502    \u2514\u2500Sequential: 3-29                       [1, 256, 10, 10]          656,384\n\u2502    \u2502    \u2514\u2500Conv: 3-30                             [1, 256, 10, 10]          131,584\n\u2502    \u2502    \u2514\u2500Conv: 3-31                             [1, 512, 10, 10]          263,168\n\u2502    \u2514\u2500SPPF: 2-10                                  [1, 512, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-32                             [1, 256, 10, 10]          131,584\n\u2502    \u2502    \u2514\u2500MaxPool2d: 3-33                        [1, 256, 10, 10]          --\n\u2502    \u2502    \u2514\u2500MaxPool2d: 3-34                        [1, 256, 10, 10]          --\n\u2502    \u2502    \u2514\u2500MaxPool2d: 3-35                        [1, 256, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-36                             [1, 512, 10, 10]          525,312\n\u2502    \u2514\u2500Conv: 2-11                                  [1, 256, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-37                           [1, 256, 10, 10]          131,072\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-38                      [1, 256, 10, 10]          512\n\u2502    \u2502    \u2514\u2500SiLU: 3-39                             [1, 256, 10, 10]          --\n\u251c\u2500YOLOv5Neck: 1-2                                  [1, 128, 40, 40]          --\n\u2502    \u2514\u2500Upsample: 2-12                              [1, 256, 20, 20]          --\n\u2502    \u2514\u2500Concat: 2-13                                [1, 512, 20, 20]          --\n\u2502    \u2514\u2500C3: 2-14                                    [1, 256, 20, 20]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-40                             [1, 128, 20, 20]          65,792\n\u2502    \u2502    \u2514\u2500Sequential: 3-41                       [1, 128, 20, 20]          164,352\n\u2502    \u2502    \u2514\u2500Conv: 3-42                             [1, 128, 20, 20]          65,792\n\u2502    \u2502    \u2514\u2500Conv: 3-43                             [1, 256, 20, 20]          66,048\n\u2502    \u2514\u2500Conv: 2-15                                  [1, 128, 20, 20]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-44                           [1, 128, 20, 20]          32,768\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-45                      [1, 128, 20, 20]          256\n\u2502    \u2502    \u2514\u2500SiLU: 3-46                             [1, 128, 20, 20]          --\n\u2502    \u2514\u2500Upsample: 2-16                              [1, 128, 40, 40]          --\n\u2502    \u2514\u2500Concat: 2-17                                [1, 256, 40, 40]          --\n\u2502    \u2514\u2500C3: 2-18                                    [1, 128, 40, 40]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-47                             [1, 64, 40, 40]           16,512\n\u2502    \u2502    \u2514\u2500Sequential: 3-48                       [1, 64, 40, 40]           41,216\n\u2502    \u2502    \u2514\u2500Conv: 3-49                             [1, 64, 40, 40]           16,512\n\u2502    \u2502    \u2514\u2500Conv: 3-50                             [1, 128, 40, 40]          16,640\n\u2502    \u2514\u2500Conv: 2-19                                  [1, 128, 20, 20]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-51                           [1, 128, 20, 20]          147,456\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-52                      [1, 128, 20, 20]          256\n\u2502    \u2502    \u2514\u2500SiLU: 3-53                             [1, 128, 20, 20]          --\n\u2502    \u2514\u2500Concat: 2-20                                [1, 256, 20, 20]          --\n\u2502    \u2514\u2500C3: 2-21                                    [1, 256, 20, 20]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-54                             [1, 128, 20, 20]          33,024\n\u2502    \u2502    \u2514\u2500Sequential: 3-55                       [1, 128, 20, 20]          164,352\n\u2502    \u2502    \u2514\u2500Conv: 3-56                             [1, 128, 20, 20]          33,024\n\u2502    \u2502    \u2514\u2500Conv: 3-57                             [1, 256, 20, 20]          66,048\n\u2502    \u2514\u2500Conv: 2-22                                  [1, 256, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-58                           [1, 256, 10, 10]          589,824\n\u2502    \u2502    \u2514\u2500BatchNorm2d: 3-59                      [1, 256, 10, 10]          512\n\u2502    \u2502    \u2514\u2500SiLU: 3-60                             [1, 256, 10, 10]          --\n\u2502    \u2514\u2500Concat: 2-23                                [1, 512, 10, 10]          --\n\u2502    \u2514\u2500C3: 2-24                                    [1, 512, 10, 10]          --\n\u2502    \u2502    \u2514\u2500Conv: 3-61                             [1, 256, 10, 10]          131,584\n\u2502    \u2502    \u2514\u2500Sequential: 3-62                       [1, 256, 10, 10]          656,384\n\u2502    \u2502    \u2514\u2500Conv: 3-63                             [1, 256, 10, 10]          131,584\n\u2502    \u2502    \u2514\u2500Conv: 3-64                             [1, 512, 10, 10]          263,168\n\u251c\u2500YOLOv5Head: 1-3                                  [1, 6300, 4]              --\n\u2502    \u2514\u2500ModuleList: 2-25                            --                        --\n\u2502    \u2502    \u2514\u2500Conv2d: 3-65                           [1, 21, 40, 40]           2,709\n\u2502    \u2502    \u2514\u2500Conv2d: 3-66                           [1, 21, 20, 20]           5,397\n\u2502    \u2502    \u2514\u2500Conv2d: 3-67                           [1, 21, 10, 10]           10,773\n====================================================================================================\nTotal params: 7,025,023\nTrainable params: 7,025,023\nNon-trainable params: 0\nTotal mult-adds (G): 1.97\n====================================================================================================\nInput size (MB): 1.23\nForward/backward pass size (MB): 94.97\nParams size (MB): 28.10\nEstimated Total Size (MB): 124.30\n====================================================================================================\n2023-05-03 13:30:32.840 | INFO     | autocare_tx_model.core.utils.functions:check_gpu_availability:49 - Model total memory: 2086.32 MB\n2023-05-03 13:30:32.840 | INFO     | autocare_tx_model.core.utils.functions:check_gpu_availability:50 - GPU total memory: 24214.56 MB\n2023-05-03 13:30:32.841 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch0\n2023-05-03 13:30:32.922 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 0 [1/5] - lr: 0.005001 train loss: 4.260938 reg_loss: 0.547251 obj_loss: 0.087049 cls_loss: 3.626638\n2023-05-03 13:30:33.070 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:33.247 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:33.248 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n2023-05-03 13:30:33.249 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:33.317 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch1\n2023-05-03 13:30:33.553 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 1 [1/5] - lr: 0.009986 train loss: 2.535333 reg_loss: 0.507368 obj_loss: 0.097771 cls_loss: 1.930194\n2023-05-03 13:30:33.696 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:33.883 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:33.918 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:33.918 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:33.984 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch2\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:34.222 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 2 [1/5] - lr: 0.009952 train loss: 1.861379 reg_loss: 0.434899 obj_loss: 0.127667 cls_loss: 1.298813\n2023-05-03 13:30:34.364 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:34.597 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:34.637 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:34.637 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:34.702 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch3\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:34.946 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 3 [1/5] - lr: 0.009899 train loss: 2.377210 reg_loss: 0.452500 obj_loss: 0.104163 cls_loss: 1.820547\n2023-05-03 13:30:35.092 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:35.334 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:35.372 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:35.372 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:35.432 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch4\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:35.679 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 4 [1/5] - lr: 0.009827 train loss: 2.214077 reg_loss: 0.426855 obj_loss: 0.125183 cls_loss: 1.662040\n2023-05-03 13:30:35.820 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:36.100 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:36.137 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:36.137 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:36.188 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch5\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:36.432 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 5 [1/5] - lr: 0.009735 train loss: 2.212755 reg_loss: 0.389770 obj_loss: 0.139339 cls_loss: 1.683646\n2023-05-03 13:30:36.577 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:36.908 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:36.945 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:36.946 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:36.996 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch6\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:37.237 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 6 [1/5] - lr: 0.009625 train loss: 2.739835 reg_loss: 0.390177 obj_loss: 0.132937 cls_loss: 2.216721\n2023-05-03 13:30:37.381 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:37.681 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:37.725 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:37.726 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:37.778 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch7\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:38.021 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 7 [1/5] - lr: 0.009497 train loss: 1.816361 reg_loss: 0.388400 obj_loss: 0.135012 cls_loss: 1.292949\n2023-05-03 13:30:38.166 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:38.472 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:38.510 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:38.510 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:38.563 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch8\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:38.803 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 8 [1/5] - lr: 0.009351 train loss: 2.485471 reg_loss: 0.383999 obj_loss: 0.133637 cls_loss: 1.967834\n2023-05-03 13:30:38.947 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:39.258 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:39.296 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:39.296 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:39.346 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch9\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:39.587 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 9 [1/5] - lr: 0.009188 train loss: 1.637083 reg_loss: 0.378643 obj_loss: 0.126540 cls_loss: 1.131900\n2023-05-03 13:30:39.732 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:40.039 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:40.076 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:40.077 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:40.127 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch10\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:40.372 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 10 [1/5] - lr: 0.009008 train loss: 1.712753 reg_loss: 0.383835 obj_loss: 0.127124 cls_loss: 1.201795\n2023-05-03 13:30:40.516 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:40.787 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:40.825 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:40.826 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:40.876 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch11\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:41.116 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 11 [1/5] - lr: 0.008812 train loss: 1.876652 reg_loss: 0.395753 obj_loss: 0.115975 cls_loss: 1.364924\n2023-05-03 13:30:41.260 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:41.489 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:41.526 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:41.526 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:41.577 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch12\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:41.825 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 12 [1/5] - lr: 0.008602 train loss: 1.272865 reg_loss: 0.376073 obj_loss: 0.113510 cls_loss: 0.783283\n2023-05-03 13:30:41.969 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:42.167 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:42.200 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.021\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.043\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:42.200 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:42.275 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch13\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:42.514 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 13 [1/5] - lr: 0.008377 train loss: 1.453691 reg_loss: 0.360330 obj_loss: 0.130844 cls_loss: 0.962517\n2023-05-03 13:30:42.656 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:42.834 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:42.862 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.007\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.029\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:42.862 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:42.939 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch14\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:43.178 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 14 [1/5] - lr: 0.008138 train loss: 1.602840 reg_loss: 0.359602 obj_loss: 0.124560 cls_loss: 1.118678\n2023-05-03 13:30:43.320 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:43.500 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:43.527 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.017\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.168\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.034\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.017\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.017\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.031\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.033\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.029\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:43.528 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:43.603 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch15\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:43.841 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 15 [1/5] - lr: 0.007888 train loss: 1.948870 reg_loss: 0.385194 obj_loss: 0.115228 cls_loss: 1.448448\n2023-05-03 13:30:43.984 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:44.161 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:44.183 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.001\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.004\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.025\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.086\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:44.184 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:44.234 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch16\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:44.473 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 16 [1/5] - lr: 0.007626 train loss: 1.475740 reg_loss: 0.351324 obj_loss: 0.126045 cls_loss: 0.998371\n2023-05-03 13:30:44.616 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:44.792 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:44.805 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.017\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.088\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.035\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.029\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.050\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:44.805 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:44.883 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch17\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:45.124 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 17 [1/5] - lr: 0.007354 train loss: 1.408423 reg_loss: 0.337550 obj_loss: 0.130415 cls_loss: 0.940458\n2023-05-03 13:30:45.270 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:45.446 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:45.450 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:45.451 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:45.502 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch18\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:45.745 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 18 [1/5] - lr: 0.007072 train loss: 1.212992 reg_loss: 0.350253 obj_loss: 0.113476 cls_loss: 0.749263\n2023-05-03 13:30:45.890 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:46.067 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:46.071 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.022\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.074\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.045\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.014\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.029\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.029\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:46.071 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:46.147 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch19\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:46.395 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 19 [1/5] - lr: 0.006782 train loss: 1.066566 reg_loss: 0.337678 obj_loss: 0.110229 cls_loss: 0.618660\n2023-05-03 13:30:46.540 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:46.715 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:46.720 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.018\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.119\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.036\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.021\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.071\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.071\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.143\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:46.720 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:46.771 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch20\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:47.012 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 20 [1/5] - lr: 0.006485 train loss: 1.382436 reg_loss: 0.341666 obj_loss: 0.118334 cls_loss: 0.922435\n2023-05-03 13:30:47.154 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:47.333 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:47.339 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.046\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.188\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.003\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.092\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.029\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.200\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.236\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.471\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:47.339 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:47.416 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch21\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:47.652 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 21 [1/5] - lr: 0.006182 train loss: 1.331800 reg_loss: 0.340527 obj_loss: 0.124111 cls_loss: 0.867162\n2023-05-03 13:30:47.794 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:47.971 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:47.976 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.035\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.272\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.069\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.050\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.050\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.050\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:47.976 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:48.027 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch22\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:48.268 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 22 [1/5] - lr: 0.005875 train loss: 7.322730 reg_loss: 0.350574 obj_loss: 0.108606 cls_loss: 6.863550\n2023-05-03 13:30:48.410 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:48.589 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:48.600 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.002\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.008\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.006\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.014\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.229\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:48.601 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:48.652 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch23\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:48.895 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 23 [1/5] - lr: 0.005564 train loss: 1.902880 reg_loss: 0.391556 obj_loss: 0.105856 cls_loss: 1.405467\n2023-05-03 13:30:49.038 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:49.216 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:49.229 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.001\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.004\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.003\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.200\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:49.229 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:49.280 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch24\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:49.524 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 24 [1/5] - lr: 0.005251 train loss: 1.269053 reg_loss: 0.336419 obj_loss: 0.119170 cls_loss: 0.813465\n2023-05-03 13:30:49.666 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:49.844 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:49.855 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.002\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.011\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.006\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.007\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.086\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.171\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:49.855 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:49.907 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch25\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:50.153 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 25 [1/5] - lr: 0.004937 train loss: 1.978267 reg_loss: 0.327972 obj_loss: 0.129118 cls_loss: 1.521177\n2023-05-03 13:30:50.297 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:50.472 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:50.481 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.002\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.021\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.043\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:50.481 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:50.533 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch26\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:50.777 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 26 [1/5] - lr: 0.004623 train loss: 1.441909 reg_loss: 0.369785 obj_loss: 0.118597 cls_loss: 0.953527\n2023-05-03 13:30:50.918 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:51.096 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:51.103 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.002\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.008\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.005\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.050\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.093\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.186\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:51.103 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:51.155 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch27\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:51.392 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 27 [1/5] - lr: 0.004311 train loss: 1.528049 reg_loss: 0.328164 obj_loss: 0.117330 cls_loss: 1.082555\n2023-05-03 13:30:51.534 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:51.710 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:51.716 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.010\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.034\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.001\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.031\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.200\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.400\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:51.716 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:51.768 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch28\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:52.013 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 28 [1/5] - lr: 0.004001 train loss: 1.392124 reg_loss: 0.326118 obj_loss: 0.116129 cls_loss: 0.949877\n2023-05-03 13:30:52.156 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:52.333 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:52.338 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.049\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.105\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.168\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.016\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.140\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.155\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.167\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.143\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:52.339 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:52.415 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch29\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:52.656 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 29 [1/5] - lr: 0.003696 train loss: 1.884687 reg_loss: 0.325858 obj_loss: 0.126104 cls_loss: 1.432726\n2023-05-03 13:30:52.801 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:52.978 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:52.983 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.019\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.082\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.043\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.007\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.200\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:52.983 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:53.036 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch30\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:53.280 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 30 [1/5] - lr: 0.003395 train loss: 1.362706 reg_loss: 0.324126 obj_loss: 0.123358 cls_loss: 0.915222\n2023-05-03 13:30:53.423 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:53.600 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:53.604 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.025\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.075\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.049\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.121\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.121\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.243\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:53.605 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:53.658 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch31\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:53.904 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 31 [1/5] - lr: 0.003101 train loss: 3.074873 reg_loss: 0.323089 obj_loss: 0.123856 cls_loss: 2.627928\n2023-05-03 13:30:54.048 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:54.224 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:54.229 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.025\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.119\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.167\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.025\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.017\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.133\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.133\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.167\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:54.229 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:54.281 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch32\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:54.526 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 32 [1/5] - lr: 0.002814 train loss: 2.036371 reg_loss: 0.335416 obj_loss: 0.120887 cls_loss: 1.580068\n2023-05-03 13:30:54.668 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:54.845 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:54.850 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.021\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.081\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.011\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.041\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.007\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.143\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.143\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.286\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:54.851 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:54.904 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch33\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:55.151 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 33 [1/5] - lr: 0.002536 train loss: 0.944887 reg_loss: 0.319766 obj_loss: 0.113722 cls_loss: 0.511399\n2023-05-03 13:30:55.293 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:55.471 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:55.476 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.020\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.069\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.039\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.021\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.107\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.107\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.214\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:55.477 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:55.531 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch34\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:55.775 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 34 [1/5] - lr: 0.002268 train loss: 0.708682 reg_loss: 0.308316 obj_loss: 0.115699 cls_loss: 0.284667\n2023-05-03 13:30:55.918 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:56.097 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:56.101 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.012\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.064\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.024\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.014\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:56.102 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:56.155 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch35\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:56.395 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 35 [1/5] - lr: 0.002010 train loss: 1.337399 reg_loss: 0.318800 obj_loss: 0.120668 cls_loss: 0.897931\n2023-05-03 13:30:56.539 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:56.717 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:56.721 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.033\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.104\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.066\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.007\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.107\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.107\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.214\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:56.722 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:56.776 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch36\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:57.013 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 36 [1/5] - lr: 0.001765 train loss: 1.631153 reg_loss: 0.321505 obj_loss: 0.119930 cls_loss: 1.189718\n2023-05-03 13:30:57.160 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:57.337 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:57.342 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.043\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.152\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.015\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.087\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:57.342 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:57.395 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch37\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:57.642 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 37 [1/5] - lr: 0.001532 train loss: 0.697975 reg_loss: 0.314334 obj_loss: 0.114642 cls_loss: 0.268999\n2023-05-03 13:30:57.789 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:57.966 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:57.970 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.011\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.048\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.023\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.036\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.036\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.071\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:57.970 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:58.023 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch38\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:58.272 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 38 [1/5] - lr: 0.001312 train loss: 1.240886 reg_loss: 0.326866 obj_loss: 0.119011 cls_loss: 0.795009\n2023-05-03 13:30:58.415 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:58.591 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:58.596 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.064\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.196\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.142\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.101\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.167\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.167\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.233\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:58.596 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:58.676 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch39\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:58.925 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 39 [1/5] - lr: 0.001108 train loss: 1.794280 reg_loss: 0.362008 obj_loss: 0.103507 cls_loss: 1.328765\n2023-05-03 13:30:59.070 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:59.246 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:59.251 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.042\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.199\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.084\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.057\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:59.252 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:59.305 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch40\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:30:59.550 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 40 [1/5] - lr: 0.000918 train loss: 1.460464 reg_loss: 0.310488 obj_loss: 0.126525 cls_loss: 1.023451\n2023-05-03 13:30:59.693 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:30:59.869 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:30:59.874 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.057\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.287\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.114\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.064\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.093\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.093\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.186\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:30:59.874 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:30:59.928 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch41\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:00.165 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 41 [1/5] - lr: 0.000745 train loss: 1.492581 reg_loss: 0.316655 obj_loss: 0.116548 cls_loss: 1.059378\n2023-05-03 13:31:00.319 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:00.496 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:00.501 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.065\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.287\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.130\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.086\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.229\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:00.501 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:00.577 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch42\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:00.829 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 42 [1/5] - lr: 0.000589 train loss: 0.700948 reg_loss: 0.297589 obj_loss: 0.123728 cls_loss: 0.279631\n2023-05-03 13:31:00.977 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:01.152 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:01.156 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.070\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.202\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.019\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.141\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.086\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:01.157 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:01.236 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch43\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:01.480 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 43 [1/5] - lr: 0.000449 train loss: 2.074418 reg_loss: 0.316617 obj_loss: 0.110579 cls_loss: 1.647222\n2023-05-03 13:31:01.627 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:01.804 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:01.809 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.073\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.367\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.147\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.114\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.171\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.171\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.343\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:01.809 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:01.885 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch44\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:02.126 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 44 [1/5] - lr: 0.000328 train loss: 0.984528 reg_loss: 0.327558 obj_loss: 0.116939 cls_loss: 0.540032\n2023-05-03 13:31:02.271 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:02.449 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:02.454 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.060\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.276\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.121\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.171\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.171\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.343\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:02.454 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:02.508 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch45\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:02.787 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 45 [1/5] - lr: 0.000226 train loss: 0.590837 reg_loss: 0.311869 obj_loss: 0.111279 cls_loss: 0.167689\n2023-05-03 13:31:02.929 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:03.107 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:03.112 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.058\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.304\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.115\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:03.112 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:03.164 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch46\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:03.427 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 46 [1/5] - lr: 0.000142 train loss: 1.244600 reg_loss: 0.301033 obj_loss: 0.114694 cls_loss: 0.828873\n2023-05-03 13:31:03.568 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:03.745 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:03.750 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.058\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.302\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.005\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.116\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:03.750 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:03.802 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch47\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:04.037 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 47 [1/5] - lr: 0.000077 train loss: 0.728842 reg_loss: 0.308844 obj_loss: 0.111722 cls_loss: 0.308275\n2023-05-03 13:31:04.183 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:04.358 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:04.362 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.057\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.299\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.114\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.100\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.121\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.121\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.243\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:04.363 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:04.414 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch48\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:04.694 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 48 [1/5] - lr: 0.000032 train loss: 0.653236 reg_loss: 0.302315 obj_loss: 0.114320 cls_loss: 0.236601\n2023-05-03 13:31:04.838 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:05.015 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:05.020 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.293\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.138\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.107\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:05.020 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:05.074 | INFO     | autocare_tx_model.core.trainer.det_trainer:before_epoch:143 - ---&gt; start train epoch49\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:05.346 | INFO     | autocare_tx_model.core.trainer.det_trainer:train_one_iter:276 - epoch 49 [1/5] - lr: 0.000006 train loss: 0.927646 reg_loss: 0.295947 obj_loss: 0.114584 cls_loss: 0.517115\n2023-05-03 13:31:05.490 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:201 - Validation start...\n2023-05-03 13:31:05.667 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:212 - Evaluate..\n2023-05-03 13:31:05.672 | INFO     | autocare_tx_model.core.trainer.det_trainer:evaluate_and_save_model:227 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.069\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.293\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.138\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.107\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.129\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.257\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n\n2023-05-03 13:31:05.672 | INFO     | autocare_tx_model.core.trainer.base_trainer:save_ckpt:302 - Save weights to hubs/tx_model_mnist_detection/artifacts/train\n2023-05-03 13:31:05.726 | INFO     | autocare_tx_model.core.trainer.det_trainer:after_train:131 - Training of experiment is done and the best validation AP is 7.33\n2023-05-03 13:31:05.726 | INFO     | autocare_tx_model.core.trainer.det_trainer:test_model:166 - Test start...\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> <pre>2023-05-03 13:31:05.921 | INFO     | autocare_tx_model.core.trainer.det_trainer:test_model:187 - Evaluate..\n2023-05-03 13:31:05.926 | INFO     | autocare_tx_model.core.trainer.det_trainer:test_model:197 - \n Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.189\n Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.417\n Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.019\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.189\n Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.217\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.267\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.267\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000\n Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.267\n Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = -1.000\n AP50:95 per classes\n 1                   0.000000, 2                   0.378988,\n AP50 per classes\n 1                   0.000000, 2                   0.834158,\n</pre> <pre>Loading and preparing results...\nDONE (t=0.00s)\ncreating index...\nindex created!\nEvaluate annotation type *bbox*\nCOCOeval_opt.evaluate() finished in 0.00 seconds.\n</pre> Out[15]: <pre>TrainResult(best_ckpt_file=PosixPath('hubs/tx_model_mnist_detection/weights/best_ckpt.pt'), last_ckpt_file=PosixPath('hubs/tx_model_mnist_detection/weights/last_ckpt.pt'), metrics=[])</pre> In\u00a0[16]: Copied! <pre>ultralytics_hub = UltralyticsHub.load(\"ultralytics_mnist_detection\")\nultralytics_hub.evaluate(\"mnist_det\", set_name=\"test\")\n</pre> ultralytics_hub = UltralyticsHub.load(\"ultralytics_mnist_detection\") ultralytics_hub.evaluate(\"mnist_det\", set_name=\"test\") <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:00&lt;00:00, 25.25it/s]\n</pre> Out[16]: <pre>EvaluateResult(metrics=[{'tag': 'mAP', 'value': 0.8066571950912476}])</pre> In\u00a0[17]: Copied! <pre>huggingface_hub = HuggingFaceHub.load(\"huggingface_mnist_detection\")\nhuggingface_hub.evaluate(\"mnist_det\", set_name=\"test\")\n</pre> huggingface_hub = HuggingFaceHub.load(\"huggingface_mnist_detection\") huggingface_hub.evaluate(\"mnist_det\", set_name=\"test\") <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:00&lt;00:00, 21.73it/s]\n</pre> Out[17]: <pre>EvaluateResult(metrics=[{'tag': 'mAP', 'value': 0.18526874482631683}])</pre> In\u00a0[25]: Copied! <pre>tx_model_hub = TxModelHub.load(\"tx_model_mnist_detection\")\ntx_model_hub.evaluate(\"mnist_det\", set_name=\"test\")\n</pre> tx_model_hub = TxModelHub.load(\"tx_model_mnist_detection\") tx_model_hub.evaluate(\"mnist_det\", set_name=\"test\") <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:00&lt;00:00, 25.43it/s]\n</pre> Out[25]: <pre>EvaluateResult(metrics=[{'tag': 'mAP', 'value': 0.1792079210281372}])</pre> In\u00a0[18]: Copied! <pre>import PIL.Image\n</pre> import PIL.Image In\u00a0[19]: Copied! <pre>ultralytics_hub = UltralyticsHub.load(\"ultralytics_mnist_detection\")\nultralytics_hub.inference(\"mnist/images\", draw=True)\nPIL.Image.open(ultralytics_hub.draw_dir / \"1.png\")\n</pre> ultralytics_hub = UltralyticsHub.load(\"ultralytics_mnist_detection\") ultralytics_hub.inference(\"mnist/images\", draw=True) PIL.Image.open(ultralytics_hub.draw_dir / \"1.png\") <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 25/25 [00:00&lt;00:00, 54.73it/s]\n</pre> Out[19]: In\u00a0[20]: Copied! <pre>huggingface_hub = HuggingFaceHub.load(\"huggingface_mnist_detection\")\nhuggingface_hub.inference(\"mnist/images\", draw=True)\nPIL.Image.open(huggingface_hub.draw_dir / \"1.png\")\n</pre> huggingface_hub = HuggingFaceHub.load(\"huggingface_mnist_detection\") huggingface_hub.inference(\"mnist/images\", draw=True) PIL.Image.open(huggingface_hub.draw_dir / \"1.png\") <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 25/25 [00:00&lt;00:00, 42.81it/s]\n</pre> Out[20]: In\u00a0[21]: Copied! <pre>tx_model_hub = TxModelHub.load(\"tx_model_mnist_detection\")\ntx_model_hub.inference(\"mnist/images\", draw=True)\nPIL.Image.open(tx_model_hub.draw_dir / \"1.png\")\n</pre> tx_model_hub = TxModelHub.load(\"tx_model_mnist_detection\") tx_model_hub.inference(\"mnist/images\", draw=True) PIL.Image.open(tx_model_hub.draw_dir / \"1.png\") <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 25/25 [00:00&lt;00:00, 62.38it/s]\n</pre> Out[21]: In\u00a0[22]: Copied! <pre>ultralytics_hub.export()\n</pre> ultralytics_hub.export() <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/ultralytics/nn/modules.py:474: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\n  elif self.dynamic or self.shape != shape:\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/ultralytics/yolo/utils/tal.py:241: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).\n  for i, stride in enumerate(strides):\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/torch/onnx/utils.py:617: UserWarning: ONNX Preprocess - Removing mutation from node aten::sub_ on block input: 'tensor.1'. This changes graph semantics. (Triggered internally at ../torch/csrc/jit/passes/onnx/remove_inplace_ops_for_onnx.cpp:335.)\n  _C._jit_pass_onnx_remove_inplace_ops_for_onnx(graph, module)\n</pre> Out[22]: <pre>ExportResult(export_file=PosixPath('hubs/ultralytics_mnist_detection/weights/model.onnx'))</pre> In\u00a0[23]: Copied! <pre>huggingface_hub.export()\n</pre> huggingface_hub.export() <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/transformers/models/detr/modeling_detr.py:575: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\n  if attn_weights.size() != (batch_size * self.num_heads, target_len, source_len):\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/transformers/models/detr/modeling_detr.py:582: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\n  if attention_mask.size() != (batch_size, 1, target_len, source_len):\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/transformers/models/detr/modeling_detr.py:606: TracerWarning: Converting a tensor to a Python boolean might cause the trace to be incorrect. We can't record the data flow of Python values, so this value will be treated as a constant in the future. This means that the trace might not generalize to other inputs!\n  if attn_output.size() != (batch_size * self.num_heads, target_len, self.head_dim):\n/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/transformers/models/detr/image_processing_detr.py:1567: TracerWarning: Iterating over a tensor might cause the trace to be incorrect. Passing a tensor of different shape won't change the number of iterations executed (and might lead to errors or silently give incorrect results).\n  for s, l, b in zip(scores, labels, boxes):\n</pre> Out[23]: <pre>ExportResult(export_file=PosixPath('hubs/huggingface_mnist_detection/weights/model.onnx'))</pre> In\u00a0[26]: Copied! <pre>tx_model_hub.export(device=\"cpu\")\n</pre> tx_model_hub.export(device=\"cpu\") <pre>/home/lhj/anaconda3/envs/waffle/lib/python3.9/site-packages/torch/onnx/utils.py:617: UserWarning: ONNX Preprocess - Removing mutation from node aten::sub_ on block input: 'tensor.1'. This changes graph semantics. (Triggered internally at ../torch/csrc/jit/passes/onnx/remove_inplace_ops_for_onnx.cpp:335.)\n  _C._jit_pass_onnx_remove_inplace_ops_for_onnx(graph, module)\n</pre> Out[26]: <pre>ExportResult(export_file=PosixPath('hubs/tx_model_mnist_detection/weights/model.onnx'))</pre> In\u00a0[27]: Copied! <pre>ultralytics_hub.benchmark(image_size=320, batch_size=16)\n</pre> ultralytics_hub.benchmark(image_size=320, batch_size=16) <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:01&lt;00:00, 97.22it/s]\n</pre> Out[27]: <pre>{'inference_time': 1.0294418334960938,\n 'fps': 1554.2403154204742,\n 'image_size': [320, 320],\n 'batch_size': 16,\n 'precision': 'fp32',\n 'device': 'cuda:0',\n 'cpu_name': '13th Gen Intel(R) Core(TM) i9-13900KF',\n 'gpu_name': 'NVIDIA GeForce RTX 4090'}</pre> In\u00a0[28]: Copied! <pre>huggingface_hub.benchmark(image_size=320, batch_size=16)\n</pre> huggingface_hub.benchmark(image_size=320, batch_size=16) <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:02&lt;00:00, 42.96it/s]\n</pre> Out[28]: <pre>{'inference_time': 2.328606128692627,\n 'fps': 687.1063252325563,\n 'image_size': [320, 320],\n 'batch_size': 16,\n 'precision': 'fp32',\n 'device': 'cuda:0',\n 'cpu_name': '13th Gen Intel(R) Core(TM) i9-13900KF',\n 'gpu_name': 'NVIDIA GeForce RTX 4090'}</pre> In\u00a0[29]: Copied! <pre>tx_model_hub.benchmark(image_size=320, batch_size=16)\n</pre> tx_model_hub.benchmark(image_size=320, batch_size=16) <pre>100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 100/100 [00:00&lt;00:00, 113.23it/s]\n</pre> Out[29]: <pre>{'inference_time': 0.8841898441314697,\n 'fps': 1809.5661362992278,\n 'image_size': [320, 320],\n 'batch_size': 16,\n 'precision': 'fp32',\n 'device': 'cuda:0',\n 'cpu_name': '13th Gen Intel(R) Core(TM) i9-13900KF',\n 'gpu_name': 'NVIDIA GeForce RTX 4090'}</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"tutorials/using_hub/#create-ultralytics-hub","title":"Create Ultralytics Hub\u00b6","text":""},{"location":"tutorials/using_hub/#create-huggingface-hub","title":"Create Huggingface Hub\u00b6","text":""},{"location":"tutorials/using_hub/#create-tx-model-hub","title":"Create Tx Model Hub\u00b6","text":""},{"location":"tutorials/using_hub/#train","title":"Train\u00b6","text":""},{"location":"tutorials/using_hub/#load-dataset","title":"Load Dataset\u00b6","text":""},{"location":"tutorials/using_hub/#ultralytics","title":"Ultralytics\u00b6","text":""},{"location":"tutorials/using_hub/#huggingface","title":"Huggingface\u00b6","text":""},{"location":"tutorials/using_hub/#evaluate","title":"Evaluate\u00b6","text":""},{"location":"tutorials/using_hub/#inference","title":"Inference\u00b6","text":""},{"location":"tutorials/using_hub/#export-to-onnx","title":"Export to onnx\u00b6","text":""},{"location":"tutorials/using_hub/#benchmark","title":"Benchmark\u00b6","text":""},{"location":"waffle_hub/","title":"Waffle Hub","text":"<p><code>Waffle Hub</code> provide two key component classes: <code>Hub</code> and <code>Dataset</code>.</p>"},{"location":"waffle_hub/#hub","title":"Hub","text":"<p><code>Hub</code> provides same interface for various powerfull Deep Learning Frameworks. Here is our brief system architecture.</p> <p></p> <p>Each input and output adapter is responsible for converting our interface to the framework's interface. For example, <code>Ultralytics</code> uses <code>imgsz</code> for image size parameter, but <code>detectron2</code> uses <code>IMAGE_SIZE</code>. So, we need to convert our interface to the framework's interface. <code>waffle_hub</code> provides <code>InputAdapter</code> and <code>OutputAdapter</code> for this purpose.</p>"},{"location":"waffle_hub/#dataset","title":"Dataset","text":"<p><code>Dataset</code> class support many types of data format such as <code>coco</code>, <code>yolo</code>. You can use it to convert dataset or manage dataset.</p>"},{"location":"waffle_hub/dataset/dataset/","title":"Dataset","text":""},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.add_annotations","title":"<code>add_annotations(annotations)</code>","text":"<p>Add \"Annotation\"s to dataset.</p> <p>Parameters:</p> Name Type Description Default <code>annotations</code> <code>list[Annotation]</code> <p>list of \"Annotation\"s</p> required"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.add_categories","title":"<code>add_categories(categories)</code>","text":"<p>Add \"Category\"s to dataset.</p> <p>Parameters:</p> Name Type Description Default <code>categories</code> <code>list[Category]</code> <p>list of \"Category\"s</p> required"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.add_images","title":"<code>add_images(images)</code>","text":"<p>Add \"Image\"s to dataset.</p> <p>Parameters:</p> Name Type Description Default <code>images</code> <code>list[Image]</code> <p>list of \"Image\"s</p> required"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.add_predictions","title":"<code>add_predictions(predictions)</code>","text":"<p>Add \"Annotation\"s to dataset.</p> <p>Parameters:</p> Name Type Description Default <code>annotations</code> <code>list[Annotation]</code> <p>list of \"Annotation\"s</p> required"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.clone","title":"<code>clone(src_name, name, src_root_dir=None, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Clone Existing Dataset. This method clones an existing dataset.</p> <p>Parameters:</p> Name Type Description Default <code>src_name</code> <code>str</code> <p>Dataset name to clone. It should be Waffle Created Dataset.</p> required <code>name</code> <code>str</code> <p>New Dataset name</p> required <code>src_root_dir</code> <code>str</code> <p>Source Dataset root directory. Defaults to None.</p> <code>None</code> <code>root_dir</code> <code>str</code> <p>New Dataset root directory. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>FileNotFoundError</code> <p>if source dataset does not exist.</p> <code>FileExistsError</code> <p>if new dataset name already exist.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; ds = Dataset.clone(\"my_dataset\", \"my_dataset_clone\")\n&gt;&gt;&gt; ds.name\n'my_dataset_clone'  # cloned dataset name\n&gt;&gt;&gt; ds.task\n'CLASSIFICATION'   # original dataset task\n</code></pre> <p>Returns:</p> Name Type Description <code>Dataset</code> <code>Dataset</code> <p>Dataset Class</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.delete","title":"<code>delete()</code>","text":"<p>Delete Dataset</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.export","title":"<code>export(data_type)</code>","text":"<p>Export Dataset to Specific data formats</p> <p>Parameters:</p> Name Type Description Default <code>data_type</code> <code>Union[str, DataType]</code> <p>export data type. one of [\"YOLO\", \"COCO\"].</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>if data_type is not one of DataType.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; dataset = Dataset.load(\"some_dataset\")\n&gt;&gt;&gt; dataset.export(data_type=\"YOLO\")\npath/to/dataset_dir/exports/yolo\n</code></pre>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.export--you-can-train-with-exported-dataset","title":"You can train with exported dataset","text":"<pre><code>&gt;&gt;&gt; hub.train(\"path/to/dataset_dir/exports/yolo\", ...)\n</code></pre> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>exported dataset directory</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_coco","title":"<code>from_coco(name, task, coco_file, coco_root_dir, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Import Dataset from coco format. This method imports coco format dataset.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Dataset name.</p> required <code>task</code> <code>str</code> <p>Dataset task.</p> required <code>coco_file</code> <code>Union[str, list[str]]</code> <p>Coco json file path. If given list, it will be regarded as [train, val, test] json file.</p> required <code>coco_root_dir</code> <code>Union[str, list[str]]</code> <p>Coco image root directory. If given list, it will be regarded as [train, val, test] coco root file.</p> required <code>root_dir</code> <code>str</code> <p>Dataset root directory. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>FileExistsError</code> <p>if new dataset name already exist.</p> <p>Examples:</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_coco--import-one-coco-json-file","title":"Import one coco json file.","text":"<pre><code>&gt;&gt;&gt; ds = Dataset.from_coco(\"my_dataset\", \"object_detection\", \"path/to/coco.json\", \"path/to/coco_root\")\n&gt;&gt;&gt; ds.images\n{1: &lt;Image: 1&gt;, 2: &lt;Image: 2&gt;, 3: &lt;Image: 3&gt;, 4: &lt;Image: 4&gt;, 5: &lt;Image: 5&gt;}\n&gt;&gt;&gt; ds.annotations\n{1: &lt;Annotation: 1&gt;, 2: &lt;Annotation: 2&gt;, 3: &lt;Annotation: 3&gt;, 4: &lt;Annotation: 4&gt;, 5: &lt;Annotation: 5&gt;}\n&gt;&gt;&gt; ds.categories\n{1: &lt;Category: 1&gt;, 2: &lt;Category: 2&gt;, 3: &lt;Category: 3&gt;, 4: &lt;Category: 4&gt;, 5: &lt;Category: 5&gt;}\n&gt;&gt;&gt; ds.category_names\n['person', 'bicycle', 'car', 'motorcycle', 'airplane']\n</code></pre>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_coco--import-multiple-coco-json-files","title":"Import multiple coco json files.","text":""},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_coco--you-can-give-coco_file-as-list","title":"You can give coco_file as list.","text":""},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_coco--given-coco-files-are-regarded-as-train-val-test-json-files","title":"Given coco files are regarded as [train, [val, [test]]] json files.","text":"<pre><code>&gt;&gt;&gt; ds = Dataset.from_coco(\"my_dataset\", \"object_detection\", [\"coco_train.json\", \"coco_val.json\"], [\"coco_train_root\", \"coco_val_root\"])\n</code></pre> <p>Returns:</p> Name Type Description <code>Dataset</code> <code>Dataset</code> <p>Dataset Class</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_huggingface","title":"<code>from_huggingface(name, task, dataset_dir, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Import Dataset from huggingface datasets. This method imports huggingface dataset from directory.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Dataset name.</p> required <code>dataset_dir</code> <code>str</code> <p>Hugging Face dataset directory.</p> required <code>task</code> <code>str</code> <p>Task name.</p> required <code>root_dir</code> <code>str</code> <p>Dataset root directory. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>FileExistsError</code> <p>if dataset name already exists</p> <code>ValueError</code> <p>if dataset is not Dataset or DatasetDict</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; ds = Dataset.from_huggingface(\"huggingface\", \"object_detection\", \"path/to/huggingface/dataset\")\n</code></pre> <p>Returns:</p> Name Type Description <code>Dataset</code> <code>Dataset</code> <p>Dataset Class</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.from_yolo","title":"<code>from_yolo(name, task, yaml_path, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Import Dataset from yolo format. This method imports dataset from yolo(ultralytics) yaml file.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Dataset name.</p> required <code>task</code> <code>str</code> <p>Dataset task.</p> required <code>yaml_path</code> <code>str</code> <p>Yolo yaml file path.</p> required <code>root_dir</code> <code>str</code> <p>Dataset root directory. Defaults to None.</p> <code>None</code> Example <p>ds = Dataset.from_yolo(\"yolo\", \"classification\", \"path/to/yolo.yaml\")</p> <p>Returns:</p> Name Type Description <code>Dataset</code> <code>Dataset</code> <p>Imported dataset.</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.get_annotations","title":"<code>get_annotations(image_id=None)</code>","text":"<p>Get \"Annotation\"s.</p> <p>Parameters:</p> Name Type Description Default <code>image_id</code> <code>int</code> <p>image id. None for all \"Annotation\"s. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[Annotation]</code> <p>list[Annotation]: \"Annotation\" list</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.get_categories","title":"<code>get_categories(category_ids=None)</code>","text":"<p>Get \"Category\"s.</p> <p>Parameters:</p> Name Type Description Default <code>category_ids</code> <code>list[int]</code> <p>id list. None for all \"Category\"s. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[Category]</code> <p>list[Category]: \"Category\" list</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.get_images","title":"<code>get_images(image_ids=None, labeled=True)</code>","text":"<p>Get \"Image\"s.</p> <p>Parameters:</p> Name Type Description Default <code>image_ids</code> <code>list[int]</code> <p>id list. None for all \"Image\"s. Defaults to None.</p> <code>None</code> <code>labeled</code> <code>bool</code> <p>get labeled images. False for unlabeled images. Defaults to True.</p> <code>True</code> <p>Returns:</p> Type Description <code>list[Image]</code> <p>list[Image]: \"Image\" list</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.get_predictions","title":"<code>get_predictions(image_id=None)</code>","text":"<p>Get \"Prediction\"s.</p> <p>Parameters:</p> Name Type Description Default <code>image_id</code> <code>int</code> <p>image id. None for all \"Prediction\"s. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>list[Annotation]</code> <p>list[Annotation]: \"Prediction\" list</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.get_split_ids","title":"<code>get_split_ids()</code>","text":"<p>Get split ids</p> <p>Returns:</p> Type Description <code>list[list[int]]</code> <p>list[list[int]]: split ids</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.initialize","title":"<code>initialize()</code>","text":"<p>Initialize Dataset. It creates necessary directories under {dataset_root_dir}/{dataset_name}.</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.initialized","title":"<code>initialized()</code>","text":"<p>Check if Dataset has been initialized or not.</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>initialized -&gt; True not initialized -&gt; False</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.load","title":"<code>load(name, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Load Dataset. This method loads an existing dataset.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Dataset name that Waffle Created</p> required <code>root_dir</code> <code>str</code> <p>Dataset root directory. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>FileNotFoundError</code> <p>if source dataset does not exist.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; ds = Dataset.load(\"my_dataset\")\n&gt;&gt;&gt; ds.name\n'my_dataset'  # dataset name\n</code></pre> <p>Returns:</p> Name Type Description <code>Dataset</code> <code>Dataset</code> <p>Dataset Class</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.new","title":"<code>new(name, task, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Create New Dataset. This method creates a new dataset directory and initialize dataset info file. If you have other types of data, you can use from_* methods to create a dataset.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Dataset name</p> required <code>task</code> <code>str</code> <p>Dataset task</p> required <code>root_dir</code> <code>str</code> <p>Dataset root directory. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>FileExistsError</code> <p>if dataset name already exists</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; ds = Dataset.new(\"my_dataset\", \"CLASSIFICATION\")\n&gt;&gt;&gt; ds.name\n'my_dataset'  # dataset name\n&gt;&gt;&gt; ds.task  # dataset task\n'CLASSIFICATION'\n</code></pre> <p>Returns:</p> Name Type Description <code>Dataset</code> <code>Dataset</code> <p>Dataset Class</p>"},{"location":"waffle_hub/dataset/dataset/#waffle_hub.dataset.dataset.Dataset.split","title":"<code>split(train_ratio, val_ratio=0.0, test_ratio=0.0, seed=0)</code>","text":"<p>Split Dataset to train, validation, test, (unlabeled) sets.</p> <p>Parameters:</p> Name Type Description Default <code>train_ratio</code> <code>float</code> <p>train num ratio (0 ~ 1).</p> required <code>val_ratio</code> <code>float</code> <p>val num ratio (0 ~ 1).</p> <code>0.0</code> <code>test_ratio</code> <code>float</code> <p>test num ratio (0 ~ 1).</p> <code>0.0</code> <code>seed</code> <code>int</code> <p>random seed. Defaults to 0.</p> <code>0</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>if train_ratio is not between 0.0 and 1.0.</p> <code>ValueError</code> <p>if train_ratio + val_ratio + test_ratio is not 1.0.</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; dataset = Dataset.load(\"some_dataset\")\n&gt;&gt;&gt; dataset.split(train_ratio=0.8, val_ratio=0.1, test_ratio=0.1)\n&gt;&gt;&gt; dataset.get_split_ids()\n[[1, 2, 3, 4, 5, 6, 7, 8], [9], [10], []]  # train, val, test, unlabeled image ids\n</code></pre>"},{"location":"waffle_hub/dataset/field/","title":"Field","text":""},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.Annotation","title":"<code>Annotation</code>","text":"<p>         Bases: <code>BaseField</code></p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.classification","title":"<code>classification(annotation_id=None, image_id=None, category_id=None, score=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Classification Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> <code>None</code> <code>score</code> <code>float</code> <p>prediction score. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.instance_segmentation","title":"<code>instance_segmentation(annotation_id=None, image_id=None, category_id=None, bbox=None, segmentation=None, area=None, iscrowd=0, score=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Instance Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> <code>None</code> <code>bbox</code> <code>list[float]</code> <p>[x1, y1, w, h].</p> <code>None</code> <code>segmentation</code> <code>list[list[float]]</code> <p>[[x1, y1, x2, y2, x3, y3, ...], [polygon]].</p> <code>None</code> <code>area</code> <code>int</code> <p>segmentation segmentation area.</p> <code>None</code> <code>iscrowd</code> <code>int</code> <p>is crowd or not. Default to 0.</p> <code>0</code> <code>score</code> <code>float</code> <p>prediction score. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.keypoint_detection","title":"<code>keypoint_detection(annotation_id=None, image_id=None, category_id=None, bbox=None, keypoints=None, num_keypoints=None, area=None, segmentation=None, iscrowd=0, score=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Keypoint Detection Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> <code>None</code> <code>bbox</code> <code>list[float]</code> <p>[x1, y1, w, h].</p> <code>None</code> <code>keypoints</code> <code>list[float]</code> <p>[x1, y1, v1(visible flag), x2, y2, v2(visible flag), ...]. visible flag is one of [0(Not labeled), 1(Labeled but not visible), 2(labeled and visible)]</p> <code>None</code> <code>num_keypoints</code> <code>int</code> <p>number of labeled keypoints</p> <code>None</code> <code>area</code> <code>int</code> <p>segmentation segmentation or bbox area.</p> <code>None</code> <code>segmentation</code> <code>list[list[float]]</code> <p>[[x1, y1, x2, y2, x3, y3, ...], [polygon]].</p> <code>None</code> <code>iscrowd</code> <code>int</code> <p>is crowd or not. Default to 0.</p> <code>0</code> <code>score</code> <code>list[float]</code> <p>prediction scores. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.new","title":"<code>new(annotation_id=None, image_id=None, category_id=None, bbox=None, segmentation=None, area=None, keypoints=None, num_keypoints=None, caption=None, value=None, iscrowd=None, score=None, task=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> <code>None</code> <code>bbox</code> <code>list[float]</code> <p>[x1, y1, w, h].</p> <code>None</code> <code>segmentation</code> <code>list[list[float]]</code> <p>[[[x1, y1, x2, y2, x3, y3, ...], [...]].</p> <code>None</code> <code>area</code> <code>int</code> <p>bbox area.</p> <code>None</code> <code>keypoints</code> <code>list[float]</code> <p>[x1, y1, v1(visible flag), x2, y2, v2(visible flag), ...]. visible flag is one of [0(Not labeled), 1(Labeled but not visible), 2(labeled and visible)]</p> <code>None</code> <code>num_keypoints</code> <code>int</code> <p>number of labeled keypoints</p> <code>None</code> <code>caption</code> <code>str</code> <p>string.</p> <code>None</code> <code>value</code> <code>float</code> <p>regression value.</p> <code>None</code> <code>iscrowd</code> <code>int</code> <p>is crowd or not. Default to None.</p> <code>None</code> <code>score</code> <code>float</code> <p>prediction score. Default to None.</p> <code>None</code> <code>task</code> <code>Union[str, TaskType]</code> <p>task type. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.object_detection","title":"<code>object_detection(annotation_id=None, image_id=None, category_id=None, bbox=None, area=None, iscrowd=0, score=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Object Detection Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> <code>None</code> <code>bbox</code> <code>list[float]</code> <p>[x1, y1, w, h].</p> <code>None</code> <code>area</code> <code>int</code> <p>bbox area.</p> <code>None</code> <code>iscrowd</code> <code>int</code> <p>is crowd or not. Default to 0.</p> <code>0</code> <code>score</code> <code>float</code> <p>prediction score. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.regression","title":"<code>regression(annotation_id=None, image_id=None, value=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Regression Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>value</code> <code>float</code> <p>regression value.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.semantic_segmentation","title":"<code>semantic_segmentation(annotation_id=None, image_id=None, category_id=None, bbox=None, segmentation=None, area=None, iscrowd=0, score=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Segmentation Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> <code>None</code> <code>bbox</code> <code>list[float]</code> <p>[x1, y1, w, h].</p> <code>None</code> <code>segmentation</code> <code>list[list[float]]</code> <p>[[x1, y1, x2, y2, x3, y3, ...], [polygon]].</p> <code>None</code> <code>area</code> <code>int</code> <p>segmentation segmentation area.</p> <code>None</code> <code>iscrowd</code> <code>int</code> <p>is crowd or not. Default to 0.</p> <code>0</code> <code>score</code> <code>float</code> <p>prediction score. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.text_recognition","title":"<code>text_recognition(annotation_id=None, image_id=None, caption=None, score=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Text Recognition Annotation Format</p> <p>Parameters:</p> Name Type Description Default <code>annotation_id</code> <code>int</code> <p>annotaion id. natural number.</p> <code>None</code> <code>image_id</code> <code>int</code> <p>image id. natural number.</p> <code>None</code> <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>caption</code> <code>str</code> <p>string.</p> <code>None</code> <code>score</code> <code>float</code> <p>prediction score. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Annotation</code> <code>Annotation</code> <p>annotation class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.annotation.Annotation.to_dict","title":"<code>to_dict()</code>","text":"<p>Get Dictionary of Annotation Data</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>annotation dictionary.</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.Category","title":"<code>Category</code>","text":"<p>         Bases: <code>BaseField</code></p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.classification","title":"<code>classification(category_id, name, supercategory=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Classification Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.instance_segmentation","title":"<code>instance_segmentation(category_id, name, supercategory=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Instance Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.keypoint_detection","title":"<code>keypoint_detection(category_id, name, keypoints, skeleton, supercategory=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Keypoint Detection Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>keypoints</code> <code>list[str]</code> <p>category name.</p> required <code>skeleton</code> <code>list[list[int]]</code> <p>skeleton edges.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.new","title":"<code>new(category_id, name, supercategory=None, keypoints=None, skeleton=None, task=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <code>keypoints</code> <code>list[str]</code> <p>category name.</p> <code>None</code> <code>skeleton</code> <code>list[list[int]]</code> <p>skeleton edges.</p> <code>None</code> <code>task</code> <code>Union[str, TaskType]</code> <p>task type. Default to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.object_detection","title":"<code>object_detection(category_id, name, supercategory=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Object Detection Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.semantic_segmentation","title":"<code>semantic_segmentation(category_id, name, supercategory=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Segmentation Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.text_recognition","title":"<code>text_recognition(category_id, name, supercategory=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Text Recognition Category Format</p> <p>Parameters:</p> Name Type Description Default <code>category_id</code> <code>int</code> <p>category id. natural number.</p> required <code>name</code> <code>str</code> <p>category name.</p> required <code>supercategory</code> <code>str</code> <p>supercategory name.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Category</code> <code>Category</code> <p>category class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.category.Category.to_dict","title":"<code>to_dict()</code>","text":"<p>Get Dictionary of Category</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>annotation dictionary.</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.Image","title":"<code>Image</code>","text":"<p>         Bases: <code>BaseField</code></p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.image.Image.new","title":"<code>new(image_id, file_name, width, height, date_captured=None, **kwargs)</code>  <code>classmethod</code>","text":"<p>Image Format</p> <p>Parameters:</p> Name Type Description Default <code>image_id</code> <code>int</code> <p>image id. natural number.</p> required <code>file_name</code> <code>str</code> <p>file name. relative file path.</p> required <code>width</code> <code>int</code> <p>image width.</p> required <code>height</code> <code>int</code> <p>image height.</p> required <code>date_captured</code> <code>str</code> <p>date_captured string. \"%Y-%m-%d %H:%M:%S\"</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Image</code> <code>Image</code> <p>image class</p>"},{"location":"waffle_hub/dataset/field/#waffle_hub.schema.fields.image.Image.to_dict","title":"<code>to_dict()</code>","text":"<p>Get Dictionary of Category</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>annotation dictionary.</p>"},{"location":"waffle_hub/hub/hub/","title":"Hub","text":"<p>         Bases: <code>BaseHub</code></p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.adapter.ultralytics.ultralytics_hub.UltralyticsHub.new","title":"<code>new(name, task=None, model_type=None, model_size=None, categories=None, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Create Ultralytics Hub.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Hub name</p> required <code>task</code> <code>str</code> <p>Task Name. See UltralyticsHub.TASKS. Defaults to None.</p> <code>None</code> <code>model_type</code> <code>str</code> <p>Model Type. See UltralyticsHub.MODEL_TYPES. Defaults to None.</p> <code>None</code> <code>model_size</code> <code>str</code> <p>Model Size. See UltralyticsHub.MODEL_SIZES. Defaults to None.</p> <code>None</code> <code>categories</code> <code>Union[list[dict], list]</code> <p>class dictionary or list. [{\"supercategory\": \"name\"}, ] or [\"name\",].</p> <code>None</code> <code>root_dir</code> <code>str</code> <p>Root directory of hub repository. Defaults to None.</p> <code>None</code>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.artifact_dir","title":"<code>artifact_dir: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Artifact Directory. This is raw output of each backend.</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.backend","title":"<code>backend: str</code>  <code>property</code> <code>writable</code>","text":"<p>Backend name</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.best_ckpt_file","title":"<code>best_ckpt_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Best Checkpoint File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.draw_dir","title":"<code>draw_dir: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Draw Results Directory</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.evaluate_file","title":"<code>evaluate_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Evaluate Json File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.hub_dir","title":"<code>hub_dir: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Hub(Model) Directory</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.inference_dir","title":"<code>inference_dir: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Inference Results Directory</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.inference_file","title":"<code>inference_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Inference Results File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.last_ckpt_file","title":"<code>last_ckpt_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Last Checkpoint File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.metric_file","title":"<code>metric_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Metric Csv File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.model_config_file","title":"<code>model_config_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Model Config yaml File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.model_size","title":"<code>model_size: str</code>  <code>property</code> <code>writable</code>","text":"<p>Model Size</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.model_type","title":"<code>model_type: str</code>  <code>property</code> <code>writable</code>","text":"<p>Model Type</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.name","title":"<code>name: str</code>  <code>property</code> <code>writable</code>","text":"<p>Hub name</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.onnx_file","title":"<code>onnx_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Best Checkpoint File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.root_dir","title":"<code>root_dir: Path</code>  <code>property</code> <code>writable</code>","text":"<p>Root Directory</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.task","title":"<code>task: str</code>  <code>property</code> <code>writable</code>","text":"<p>Task Name</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.train_config_file","title":"<code>train_config_file: Path</code>  <code>property</code> <code>cached</code>","text":"<p>Train Config yaml File</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.version","title":"<code>version: str</code>  <code>property</code> <code>writable</code>","text":"<p>Version</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.benchmark","title":"<code>benchmark(image_size=None, batch_size=16, device='0', half=False, trial=100)</code>","text":"<p>Benchmark Model</p> <p>Parameters:</p> Name Type Description Default <code>image_size</code> <code>Union[int, list[int]]</code> <p>inference image size. None for same with train_config (recommended).</p> <code>None</code> <code>batch_size</code> <code>int</code> <p>dynamic batch size. Defaults to 16.</p> <code>16</code> <code>device</code> <code>str</code> <p>device. \"cpu\" or \"gpu_id\". Defaults to \"0\".</p> <code>'0'</code> <code>half</code> <code>bool</code> <p>half. Defaults to False.</p> <code>False</code> <code>trial</code> <code>int</code> <p>number of trials. Defaults to 100.</p> <code>100</code> Example <p>hub.benchmark(         image_size=640,         batch_size=16,         device=\"0\",         half=False,         trial=100,     ) {     \"inference_time\": 0.123,     \"fps\": 123.123,     \"image_size\": [640, 640],     \"batch_size\": 16,     \"device\": \"0\",     \"cpu_name\": \"Intel(R) Core(TM) i7-8700 CPU @ 3.20GHz\",     \"gpu_name\": \"GeForce GTX 1080 Ti\", }</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>dict</code> <p>benchmark result</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.check_train_sanity","title":"<code>check_train_sanity()</code>","text":"<p>Check if all essential files are exist.</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True if all files are exist else False</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.delete_artifact","title":"<code>delete_artifact()</code>","text":"<p>Delete Artifact Directory. It can be trained again.</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.evaluate","title":"<code>evaluate(dataset_name, set_name='test', batch_size=4, image_size=None, letter_box=None, confidence_threshold=0.25, iou_threshold=0.5, half=False, workers=2, device='0', draw=False, dataset_root_dir=None, hold=True)</code>","text":"<p>Start Evaluate</p> <p>Parameters:</p> Name Type Description Default <code>dataset_name</code> <code>str</code> <p>waffle dataset name.</p> required <code>batch_size</code> <code>int</code> <p>batch size. Defaults to 4.</p> <code>4</code> <code>image_size</code> <code>Union[int, list[int]]</code> <p>image size. Defaults to None.</p> <code>None</code> <code>letter_box</code> <code>bool</code> <p>letter box. Defaults to None.</p> <code>None</code> <code>confidence_threshold</code> <code>float</code> <p>confidence threshold. Defaults to 0.25.</p> <code>0.25</code> <code>iou_threshold</code> <code>float</code> <p>iou threshold. Defaults to 0.5.</p> <code>0.5</code> <code>half</code> <code>bool</code> <p>half. Defaults to False.</p> <code>False</code> <code>workers</code> <code>int</code> <p>workers. Defaults to 2.</p> <code>2</code> <code>device</code> <code>str</code> <p>device. Defaults to \"0\".</p> <code>'0'</code> <code>draw</code> <code>bool</code> <p>draw. Defaults to False.</p> <code>False</code> <code>dataset_root_dir</code> <code>str</code> <p>dataset root dir. Defaults to None.</p> <code>None</code> <code>hold</code> <code>bool</code> <p>hold. Defaults to True.</p> <code>True</code> <p>Raises:</p> Type Description <code>FileNotFoundError</code> <p>if can not detect appropriate dataset.</p> <code>e</code> <p>something gone wrong with ultralytics</p> <p>Examples:</p> <pre><code>&gt;&gt;&gt; evaluate_result = hub.evaluate(\n        dataset_name=\"detection_dataset\",\n        batch_size=4,\n        image_size=640,\n        letterbox=False,\n        confidence_threshold=0.25,\n        iou_threshold=0.5,\n        workers=4,\n        device=\"0\",\n    )\n# or you can use train option by passing None\n&gt;&gt;&gt; evaluate_result = hub.evaluate(\n        ...\n        image_size=None,  # use train option\n        letterbox=None,  # use train option\n        ...\n    )\n&gt;&gt;&gt; evaluate_result.metrics\n[{\"tag\": \"mAP\", \"value\": 0.1}, ...]\n</code></pre> <p>Returns:</p> Name Type Description <code>EvaluateResult</code> <code>EvaluateResult</code> <p>evaluate result</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.export","title":"<code>export(image_size=None, batch_size=16, opset_version=11, half=False, device='0', hold=True)</code>","text":"<p>Export Model</p> <p>Parameters:</p> Name Type Description Default <code>image_size</code> <code>Union[int, list[int]]</code> <p>inference image size. None for same with train_config (recommended).</p> <code>None</code> <code>batch_size</code> <code>int</code> <p>dynamic batch size. Defaults to 16.</p> <code>16</code> <code>opset_version</code> <code>int</code> <p>onnx opset version. Defaults to 11.</p> <code>11</code> <code>half</code> <code>bool</code> <p>half. Defaults to False.</p> <code>False</code> <code>device</code> <code>str</code> <p>device. \"cpu\" or \"gpu_id\". Defaults to \"0\".</p> <code>'0'</code> <code>hold</code> <code>bool</code> <p>hold or not. If True then it holds until task finished. If False then return Inferece Callback and run in background. Defaults to True.</p> <code>True</code> Example <p>export_result = hub.export(     image_size=640,     batch_size=16,     opset_version=11, )</p> <p>Returns:</p> Name Type Description <code>ExportResult</code> <code>ExportResult</code> <p>export result</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.export--or-simply-use-train-option-by-passing-none","title":"or simply use train option by passing None","text":"<p>export_result = hub.export(     ...,     image_size=None,  # use train option     ... ) export_result.export_file hubs/my_hub/weights/model.onnx</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.from_model_config","title":"<code>from_model_config(name, model_config_file, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Create new Hub with model config.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>hub name.</p> required <code>model_config_file</code> <code>str</code> <p>model config yaml file.</p> required <code>root_dir</code> <code>str</code> <p>hub root directory. Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>Hub</code> <code>BaseHub</code> <p>New Hub instance</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.get_evaluate_result","title":"<code>get_evaluate_result()</code>","text":"<p>Get evaluate result from evaluate file.</p> Example <p>hub.get_evaluate_result() [     {         \"tag\": \"mAP\",         \"value\": 0.5,     }, ]</p> <p>Returns:</p> Name Type Description <code>dict</code> <code>list[dict]</code> <p>evaluate result</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.get_inference_result","title":"<code>get_inference_result()</code>","text":"<p>Get inference result from inference file.</p> Example <p>hub.get_inference_result() [     {         \"id\": \"00000001\",         \"category\": \"person\",         \"bbox\": [0.1, 0.2, 0.3, 0.4],         \"score\": 0.9,     }, ]</p> <p>Returns:</p> Type Description <code>list[dict]</code> <p>list[dict]: inference result</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.get_metrics","title":"<code>get_metrics()</code>","text":"<p>Get metrics per epoch from metric file.</p> Example <p>hub.get_metrics() [     [         {             \"tag\": \"epoch\",             \"value\": \"1\",         },         {             \"tag\": \"train_loss\",             \"value\": \"0.0012\",         }     ], ]</p> <p>Returns:</p> Type Description <code>list[list[dict]]</code> <p>list[dict]: metrics per epoch</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.get_model_config","title":"<code>get_model_config()</code>","text":"<p>Get model config from model config file.</p> <p>Returns:</p> Name Type Description <code>ModelConfig</code> <code>ModelConfig</code> <p>model config</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.get_train_config","title":"<code>get_train_config()</code>","text":"<p>Get train config from train config file.</p> <p>Returns:</p> Name Type Description <code>TrainConfig</code> <code>TrainConfig</code> <p>train config</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.inference","title":"<code>inference(source, recursive=True, image_size=None, letter_box=None, batch_size=4, confidence_threshold=0.25, iou_threshold=0.5, half=False, workers=2, device='0', draw=False, hold=True)</code>","text":"<p>Start Inference</p> <p>Parameters:</p> Name Type Description Default <code>source</code> <code>str</code> <p>source directory</p> required <code>recursive</code> <code>bool</code> <p>recursive. Defaults to True.</p> <code>True</code> <code>image_size</code> <code>Union[int, list[int]]</code> <p>image size. None for using training config. Defaults to None.</p> <code>None</code> <code>letter_box</code> <code>bool</code> <p>letter box. None for using training config. Defaults to None.</p> <code>None</code> <code>batch_size</code> <code>int</code> <p>batch size. Defaults to 4.</p> <code>4</code> <code>confidence_threshold</code> <code>float</code> <p>confidence threshold. Defaults to 0.25.</p> <code>0.25</code> <code>iou_threshold</code> <code>float</code> <p>iou threshold. Defaults to 0.5.</p> <code>0.5</code> <code>half</code> <code>bool</code> <p>half. Defaults to False.</p> <code>False</code> <code>workers</code> <code>int</code> <p>workers. Defaults to 2.</p> <code>2</code> <code>device</code> <code>str</code> <p>device. \"cpu\" or \"gpu_id\". Defaults to \"0\".</p> <code>'0'</code> <code>draw</code> <code>bool</code> <p>draw. Defaults to False.</p> <code>False</code> <code>hold</code> <code>bool</code> <p>hold. Defaults to True.</p> <code>True</code> <p>Raises:</p> Type Description <code>FileNotFoundError</code> <p>if can not detect appropriate dataset.</p> <code>e</code> <p>something gone wrong with ultralytics</p> Example <p>inference_result = hub.inference(         source=\"path/to/images\",         batch_size=4,         image_size=640,         letterbox=False,         confidence_threshold=0.25,         iou_threshold=0.5,         workers=4,         device=\"0\",         draw=True,     )</p> <p>Returns:</p> Name Type Description <code>InferenceResult</code> <code>InferenceResult</code> <p>inference result</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.inference--or-simply-use-train-option-by-passing-none","title":"or simply use train option by passing None","text":"<p>inference_result = hub.inference(         ...         image_size=None,  # use train option         letterbox=None,  # use train option         ...     ) inference_result.predictions [{\"relative/path/to/image/file\": [{\"category\": \"1\", \"bbox\": [0, 0, 100, 100], \"score\": 0.9}, ...]}, ...]</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.load","title":"<code>load(name, root_dir=None)</code>  <code>classmethod</code>","text":"<p>Load Hub by name.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>hub name.</p> required <code>root_dir</code> <code>str</code> <p>hub root directory. Defaults to None.</p> <code>None</code> <p>Raises:</p> Type Description <code>FileNotFoundError</code> <p>if hub is not exist in root_dir</p> <p>Returns:</p> Name Type Description <code>Hub</code> <code>BaseHub</code> <p>Hub instance</p>"},{"location":"waffle_hub/hub/hub/#waffle_hub.hub.base_hub.BaseHub.train","title":"<code>train(dataset_path, epochs=None, batch_size=None, image_size=None, learning_rate=None, letter_box=None, pretrained_model=None, device='0', workers=2, seed=0, verbose=True, hold=True)</code>","text":"<p>Start Train</p> <p>Parameters:</p> Name Type Description Default <code>dataset_path</code> <code>str</code> <p>dataset path</p> required <code>epochs</code> <code>int</code> <p>number of epochs. None to use default. Defaults to None.</p> <code>None</code> <code>batch_size</code> <code>int</code> <p>batch size. None to use default. Defaults to None.</p> <code>None</code> <code>image_size</code> <code>Union[int, list[int]]</code> <p>image size. None to use default. Defaults to None.</p> <code>None</code> <code>learning_rate</code> <code>float</code> <p>learning rate. None to use default. Defaults to None.</p> <code>None</code> <code>letter_box</code> <code>bool</code> <p>letter box. None to use default. Defaults to None.</p> <code>None</code> <code>pretrained_model</code> <code>str</code> <p>pretrained model. None to use default. Defaults to None.</p> <code>None</code> <code>device</code> <code>str</code> <p>device. \"cpu\" or \"gpu_id\". Defaults to \"0\".</p> <code>'0'</code> <code>workers</code> <code>int</code> <p>number of workers. Defaults to 2.</p> <code>2</code> <code>seed</code> <code>int</code> <p>random seed. Defaults to 0.</p> <code>0</code> <code>verbose</code> <code>bool</code> <p>verbose. Defaults to True.</p> <code>True</code> <code>hold</code> <code>bool</code> <p>hold process. Defaults to True.</p> <code>True</code> <p>Raises:</p> Type Description <code>FileExistsError</code> <p>if trained artifact exists.</p> <code>FileNotFoundError</code> <p>if can not detect appropriate dataset.</p> <code>ValueError</code> <p>if can not detect appropriate dataset.</p> <code>e</code> <p>something gone wrong with ultralytics</p> Example <p>train_result = hub.train(         dataset_path=dataset_path,         epochs=100,         batch_size=16,         image_size=640,         learning_rate=0.001,         letterbox=False,         device=\"0\",         workers=2,         seed=123     ) train_result.best_ckpt_file hubs/my_hub/weights/best_ckpt.pt train_result.metrics [[{\"tag\": \"epoch\", \"value\": 1}, {\"tag\": \"train/loss\", \"value\": 0.1}, ...], ...]</p> <p>Returns:</p> Name Type Description <code>TrainResult</code> <code>TrainResult</code> <p>train result</p>"},{"location":"waffle_hub/hub/result/","title":"Result","text":""},{"location":"waffle_hub/hub/result/#trainresult","title":"TrainResult","text":"<p>         Bases: <code>BaseSchema</code></p>"},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.TrainResult.best_ckpt_file","title":"<code>best_ckpt_file: str = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.TrainResult.last_ckpt_file","title":"<code>last_ckpt_file: str = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.TrainResult.metrics","title":"<code>metrics: list[list[dict]] = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_hub/hub/result/#evaluateresult","title":"EvaluateResult","text":"<p>         Bases: <code>BaseSchema</code></p>"},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.EvaluateResult.metrics","title":"<code>metrics: list[dict] = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_hub/hub/result/#inferenceresult","title":"InferenceResult","text":"<p>         Bases: <code>BaseSchema</code></p>"},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.InferenceResult.predictions","title":"<code>predictions: list[dict[list]] = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.InferenceResult.draw_dir","title":"<code>draw_dir: str = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_hub/hub/result/#exportresult","title":"ExportResult","text":"<p>         Bases: <code>BaseSchema</code></p>"},{"location":"waffle_hub/hub/result/#waffle_hub.schema.result.ExportResult.export_file","title":"<code>export_file: str = None</code>  <code>instance-attribute</code> <code>class-attribute</code>","text":""},{"location":"waffle_menu/","title":"Waffle Menu (private)","text":"<p><code>Waffle Menu</code> provide advanced deeplearning applications. <code>Waffle Menu</code> is based on <code>Waffle Hub</code>.</p>"},{"location":"waffle_menu/#active-learning","title":"Active Learning","text":""},{"location":"waffle_menu/active_learning/","title":"Active Learning Base Class","text":"<p>all active learning methods are inherited from <code>ActiveLearning</code> class. Only initialize methods are different. It means that you can use any active learning method by calling sample method of <code>ActiveLearning</code> class.</p>"},{"location":"waffle_menu/active_learning/#waffle_menu.active_learning.active_learning.ActiveLearning.sample","title":"<code>sample(image_dir, num_images, result_dir, save_images=True, hold=True)</code>","text":"<p>Sample images from the image directory</p> <p>Parameters:</p> Name Type Description Default <code>sampled_image_dir</code> <code>Union[Path, str]</code> <p>image directory</p> required <code>num_images</code> <code>int</code> <p>number of images to sample</p> required <code>result_dir</code> <code>Union[Path, str]</code> <p>result directory</p> required <code>save_images</code> <code>bool</code> <p>save sampled images. Defaults to True.</p> <code>True</code> <code>hold</code> <code>bool</code> <p>hold process. Defaults to True.</p> <code>True</code> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>result directory</p>"},{"location":"waffle_menu/active_learning/#randomsampling","title":"RandomSampling","text":"<p>         Bases: <code>ActiveLearning</code></p>"},{"location":"waffle_menu/active_learning/#waffle_menu.active_learning.method.random.RandomSampling.__init__","title":"<code>__init__(seed=0)</code>","text":""},{"location":"waffle_menu/active_learning/#entropysampling","title":"EntropySampling","text":"<p>         Bases: <code>ActiveLearning</code></p>"},{"location":"waffle_menu/active_learning/#waffle_menu.active_learning.method.entropy.EntropySampling.__init__","title":"<code>__init__(hub, image_size=None, letter_box=None, batch_size=32, num_workers=4, device='0')</code>","text":""},{"location":"waffle_menu/active_learning/#pl2nsampling","title":"PL2NSampling","text":"<p>         Bases: <code>ActiveLearning</code></p>"},{"location":"waffle_menu/active_learning/#waffle_menu.active_learning.method.pl2n.PL2NSampling.__init__","title":"<code>__init__(hub, diversity_sampling=False, image_size=None, letter_box=None, batch_size=32, num_workers=4, device='0')</code>","text":"<p>PL2N Sampling</p> <p>Parameters:</p> Name Type Description Default <code>hub</code> <code>BaseHub</code> <p>Hub</p> required <code>diversity_sampling</code> <code>bool</code> <p>Diversity sampling. Defaults to False.</p> <code>False</code> <code>image_size</code> <code>int</code> <p>Image size. Defaults to None.</p> <code>None</code> <code>letter_box</code> <code>bool</code> <p>Letter box. Defaults to None.</p> <code>None</code> <code>batch_size</code> <code>int</code> <p>Batch size. Defaults to 32.</p> <code>32</code> <code>num_workers</code> <code>int</code> <p>Number of workers. Defaults to 4.</p> <code>4</code> <code>device</code> <code>str</code> <p>Device. Defaults to \"0\".</p> <code>'0'</code>"}]}